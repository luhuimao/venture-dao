/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IReimbursement,
  IReimbursementInterface,
} from "../../../../contracts/companion/interfaces/IReimbursement";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract DaoRegistry",
        name: "dao",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasUsage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "spendLimitPeriod",
        type: "uint256",
      },
    ],
    name: "reimburseTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DaoRegistry",
        name: "dao",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasLeft",
        type: "uint256",
      },
    ],
    name: "shouldReimburse",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IReimbursement__factory {
  static readonly abi = _abi;
  static createInterface(): IReimbursementInterface {
    return new utils.Interface(_abi) as IReimbursementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IReimbursement {
    return new Contract(address, _abi, signerOrProvider) as IReimbursement;
  }
}
