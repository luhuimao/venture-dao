/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  FlexFundingHelperAdapterContract,
  FlexFundingHelperAdapterContractInterface,
} from "../../../../../contracts/flex/adatpers/FlexFundingHelper.sol/FlexFundingHelperAdapterContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract DaoRegistry",
        name: "dao",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "proposalId",
        type: "bytes32",
      },
    ],
    name: "getDepositAmountLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DaoRegistry",
        name: "dao",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "proposalId",
        type: "bytes32",
      },
    ],
    name: "getFundRaiseTimes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DaoRegistry",
        name: "dao",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "proposalId",
        type: "bytes32",
      },
    ],
    name: "getFundingState",
    outputs: [
      {
        internalType: "enum IFlexFunding.ProposalStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DaoRegistry",
        name: "dao",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "proposalId",
        type: "bytes32",
      },
    ],
    name: "getFundingToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DaoRegistry",
        name: "dao",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "proposalId",
        type: "bytes32",
      },
    ],
    name: "getMaxFundingAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DaoRegistry",
        name: "dao",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "proposalId",
        type: "bytes32",
      },
    ],
    name: "getfundRaiseType",
    outputs: [
      {
        internalType: "enum IFlexFunding.FundRaiseType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506112dd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063bff2620411610050578063bff26204146100d8578063c3a8f003146100f8578063f8d676831461011857600080fd5b806341439ae5146100775780636666c9bd1461009d57806380dc3141146100c5575b600080fd5b61008a6100853660046110a1565b610143565b6040519081526020015b60405180910390f35b6100b06100ab3660046110a1565b6105bd565b60408051928352602083019190915201610094565b6100b06100d33660046110a1565b610705565b6100eb6100e63660046110a1565b61084d565b60405161009491906110fe565b61010b6101063660046110a1565b610983565b60405161009491906110e4565b61012b6101263660046110a1565b610abb565b6040516001600160a01b039091168152602001610094565b6040516317ba7d8560e01b81527f7a8526bca00f0726b2fab8c3bfd5b00bfa84d07f111e48263b13de605eefcdda600482015260009081906001600160a01b038516906317ba7d859060240160206040518083038186803b1580156101a757600080fd5b505afa1580156101bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101df9190610f1f565b604051632fd2666560e21b81526001600160a01b0386811660048301526024820186905291925060009182919084169063bf4999949060440160006040518083038186803b15801561023057600080fd5b505afa158015610244573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261026c9190810190610f42565b5050506040808501519051634941d71d60e11b81527fda34ff95e06cbf2c9c32a559cd8aadd1a10104596417d62c03db2c1258df83d3600482015294975090955060009450926001600160a01b038b169250639283ae3a915060240160206040518083038186803b1580156102e057600080fd5b505afa1580156102f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031891906110cc565b610472578260200151856001600160a01b031663b0e21e8a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561035a57600080fd5b505afa15801561036e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039291906110cc565b604051634941d71d60e11b81527f64c49ee5084f4940c312104c41603e43791b03dad28152afd6eadb5b960a8a8760048201526001600160a01b038b1690639283ae3a9060240160206040518083038186803b1580156103f157600080fd5b505afa158015610405573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042991906110cc565b61043b90670de0b6b3a7640000611229565b6104459190611229565b61044f9190611229565b61046182670de0b6b3a76400006111ec565b61046b91906111cc565b91506105b2565b8260200151856001600160a01b031663b0e21e8a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104b057600080fd5b505afa1580156104c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e891906110cc565b6104f29190611229565b604051634941d71d60e11b81527f64c49ee5084f4940c312104c41603e43791b03dad28152afd6eadb5b960a8a8760048201526001600160a01b038a1690639283ae3a9060240160206040518083038186803b15801561055157600080fd5b505afa158015610565573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058991906110cc565b61059390836111b4565b6105a590670de0b6b3a76400006111ec565b6105af91906111cc565b91505b509695505050505050565b6040516317ba7d8560e01b81527f7a8526bca00f0726b2fab8c3bfd5b00bfa84d07f111e48263b13de605eefcdda6004820152600090819081906001600160a01b038616906317ba7d859060240160206040518083038186803b15801561062357600080fd5b505afa158015610637573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065b9190610f1f565b604051632fd2666560e21b81526001600160a01b0387811660048301526024820187905291925060009183169063bf4999949060440160006040518083038186803b1580156106a957600080fd5b505afa1580156106bd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106e59190810190610f42565b505050509350505050806060015181608001519350935050509250929050565b6040516317ba7d8560e01b81527f7a8526bca00f0726b2fab8c3bfd5b00bfa84d07f111e48263b13de605eefcdda6004820152600090819081906001600160a01b038616906317ba7d859060240160206040518083038186803b15801561076b57600080fd5b505afa15801561077f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a39190610f1f565b604051632fd2666560e21b81526001600160a01b0387811660048301526024820187905291925060009183169063bf4999949060440160006040518083038186803b1580156107f157600080fd5b505afa158015610805573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261082d9190810190610f42565b505050509350505050806020015181604001519350935050509250929050565b6040516317ba7d8560e01b81527f7a8526bca00f0726b2fab8c3bfd5b00bfa84d07f111e48263b13de605eefcdda600482015260009081906001600160a01b038516906317ba7d859060240160206040518083038186803b1580156108b157600080fd5b505afa1580156108c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e99190610f1f565b604051632fd2666560e21b81526001600160a01b0386811660048301526024820186905291925060009183169063bf4999949060440160006040518083038186803b15801561093757600080fd5b505afa15801561094b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109739190810190610f42565b9c9b505050505050505050505050565b6040516317ba7d8560e01b81527f7a8526bca00f0726b2fab8c3bfd5b00bfa84d07f111e48263b13de605eefcdda600482015260009081906001600160a01b038516906317ba7d859060240160206040518083038186803b1580156109e757600080fd5b505afa1580156109fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1f9190610f1f565b604051632fd2666560e21b81526001600160a01b0386811660048301526024820186905291925060009183169063bf4999949060440160006040518083038186803b158015610a6d57600080fd5b505afa158015610a81573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610aa99190810190610f42565b505091519a9950505050505050505050565b6040516317ba7d8560e01b81527f7a8526bca00f0726b2fab8c3bfd5b00bfa84d07f111e48263b13de605eefcdda600482015260009081906001600160a01b038516906317ba7d859060240160206040518083038186803b158015610b1f57600080fd5b505afa158015610b33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b579190610f1f565b604051632fd2666560e21b81526001600160a01b0386811660048301526024820186905291925060009183169063bf4999949060440160006040518083038186803b158015610ba557600080fd5b505afa158015610bb9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610be19190810190610f42565b505093519a9950505050505050505050565b8051610bfe81611282565b919050565b80518015158114610bfe57600080fd5b805160028110610bfe57600080fd5b805160058110610bfe57600080fd5b600082601f830112610c41578081fd5b815167ffffffffffffffff811115610c5b57610c5b61126c565b6020610c6f81601f19601f85011601611183565b8281528582848701011115610c82578384fd5b835b83811015610c9f578581018301518282018401528201610c84565b83811115610caf57848385840101525b5095945050505050565b60006102008284031215610ccb578081fd5b604051610100810181811067ffffffffffffffff82111715610cef57610cef61126c565b604052905080610cfe83610c13565b815260208301516020820152604083015160408201526060830151606082015260808301516080820152610d3460a08401610c03565b60a0820152610d468460c08501610d65565b60c0820152610d59846101608501610dd8565b60e08201525092915050565b600060a08284031215610d76578081fd5b610d7e611112565b90508151610d8b8161129a565b8152602082015163ffffffff81168114610da457600080fd5b60208201526040820151610db781611282565b80604083015250606082015160608201526080820151608082015292915050565b600060a08284031215610de9578081fd5b610df1611112565b9050610dfc82610c03565b81526020820151610da48161129a565b600060408284031215610e1d578081fd5b6040516040810181811067ffffffffffffffff82111715610e4057610e4061126c565b604052825181526020928301519281019290925250919050565b60006101208284031215610e6c578081fd5b610e7461113b565b90508151815260208201516020820152604082015160408201526060820151606082015260808201516080820152610eae60a08301610c03565b60a0820152610ebf60c08301610bf3565b60c082015260e082015167ffffffffffffffff80821115610edf57600080fd5b610eeb85838601610c31565b60e084015261010091508184015181811115610f0657600080fd5b610f1286828701610c31565b8385015250505092915050565b600060208284031215610f30578081fd5b8151610f3b81611282565b9392505050565b600080600080600080600080888a03610460811215610f5f578485fd5b8951610f6a81611282565b9850610180601f198201811315610f7f578586fd5b610f8761115f565b9150610f9560208c01610bf3565b825260408b0151602083015260608b0151604083015260808b01516060830152610fc160a08c01610c03565b6080830152610fd260c08c01610bf3565b60a083015260e08b015160c0830152610100808c015160e0840152610120808d0151828501526101409150818d01518185015250610160611014818e01610bf3565b82850152611023838e01610bf3565b9084015250506101a08a015190975067ffffffffffffffff811115611046578485fd5b6110528b828c01610e5a565b9650506110638a6101c08b01610cb9565b94506110738a6103c08b01610e0c565b9350610400890151925061042089015191506110926104408a01610c22565b90509295985092959890939650565b600080604083850312156110b3578182fd5b82356110be81611282565b946020939093013593505050565b6000602082840312156110dd578081fd5b5051919050565b60208101600283106110f8576110f8611256565b91905290565b60208101600583106110f8576110f8611256565b60405160a0810167ffffffffffffffff811182821017156111355761113561126c565b60405290565b604051610120810167ffffffffffffffff811182821017156111355761113561126c565b604051610180810167ffffffffffffffff811182821017156111355761113561126c565b604051601f8201601f1916810167ffffffffffffffff811182821017156111ac576111ac61126c565b604052919050565b600082198211156111c7576111c7611240565b500190565b6000826111e757634e487b7160e01b81526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561122457611224611240565b500290565b60008282101561123b5761123b611240565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461129757600080fd5b50565b6004811061129757600080fdfea2646970667358221220e0259c26a05d0c064678c9bf424bee33963cde3ae1e93aad5a3ec725da1cd81864736f6c63430008040033";

type FlexFundingHelperAdapterContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlexFundingHelperAdapterContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlexFundingHelperAdapterContract__factory extends ContractFactory {
  constructor(...args: FlexFundingHelperAdapterContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FlexFundingHelperAdapterContract> {
    return super.deploy(
      overrides || {}
    ) as Promise<FlexFundingHelperAdapterContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FlexFundingHelperAdapterContract {
    return super.attach(address) as FlexFundingHelperAdapterContract;
  }
  override connect(signer: Signer): FlexFundingHelperAdapterContract__factory {
    return super.connect(signer) as FlexFundingHelperAdapterContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlexFundingHelperAdapterContractInterface {
    return new utils.Interface(
      _abi
    ) as FlexFundingHelperAdapterContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlexFundingHelperAdapterContract {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FlexFundingHelperAdapterContract;
  }
}
