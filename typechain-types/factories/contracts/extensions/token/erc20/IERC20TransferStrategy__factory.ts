/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IERC20TransferStrategy,
  IERC20TransferStrategyInterface,
} from "../../../../../contracts/extensions/token/erc20/IERC20TransferStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract DaoRegistry",
        name: "dao",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "evaluateTransfer",
    outputs: [
      {
        internalType: "enum IERC20TransferStrategy.ApprovalType",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IERC20TransferStrategy__factory {
  static readonly abi = _abi;
  static createInterface(): IERC20TransferStrategyInterface {
    return new utils.Interface(_abi) as IERC20TransferStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IERC20TransferStrategy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IERC20TransferStrategy;
  }
}
