/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC20TokenExtensionFactory,
  ERC20TokenExtensionFactoryInterface,
} from "../../../../../contracts/extensions/token/erc20/ERC20TokenExtensionFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_identityAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "daoAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "extensionAddress",
        type: "address",
      },
    ],
    name: "ERC20TokenExtensionCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dao",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    name: "create",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dao",
        type: "address",
      },
    ],
    name: "getExtensionAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "identityAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161071c38038061071c83398101604081905261002f916100a2565b60016000556001600160a01b03811661007d5760405162461bcd60e51b815260206004820152600c60248201526b34b73b30b634b21030b2323960a11b604482015260640160405180910390fd5b600180546001600160a01b0319166001600160a01b03929092169190911790556100d0565b6000602082840312156100b3578081fd5b81516001600160a01b03811681146100c9578182fd5b9392505050565b61063d806100df6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633146637e14610046578063648402931461008e578063bf45767a146100a3575b600080fd5b6100726100543660046104ef565b6001600160a01b039081166000908152600260205260409020541690565b6040516001600160a01b03909116815260200160405180910390f35b6100a161009c366004610510565b6100b6565b005b600154610072906001600160a01b031681565b60026000541415610128576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000556001600160a01b03871661019d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f696e76616c69642064616f206164647200000000000000000000000000000000604482015260640161011f565b6001546000906101b5906001600160a01b0316610423565b6001600160a01b038981166000908152600260205260409081902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169284169283179055517fc47f0027000000000000000000000000000000000000000000000000000000008152919250829163c47f00279061023b908b908b906004016105ba565b600060405180830381600087803b15801561025557600080fd5b505af1158015610269573d6000803e3d6000fd5b50506040517f144fa6d70000000000000000000000000000000000000000000000000000000081526001600160a01b0389811660048301528416925063144fa6d79150602401600060405180830381600087803b1580156102c957600080fd5b505af11580156102dd573d6000803e3d6000fd5b50506040517fb84c82460000000000000000000000000000000000000000000000000000000081526001600160a01b038416925063b84c8246915061032890889088906004016105ba565b600060405180830381600087803b15801561034257600080fd5b505af1158015610356573d6000803e3d6000fd5b50506040517f7a1395aa00000000000000000000000000000000000000000000000000000000815260ff861660048201526001600160a01b0384169250637a1395aa9150602401600060405180830381600087803b1580156103b757600080fd5b505af11580156103cb573d6000803e3d6000fd5b5050604080516001600160a01b03808e168252851660208201527f65fa2e240471eb6b6577561ad4797df8d258cb447cb7b2f322dddb8ed5c7a9bb935001905060405180910390a15050600160005550505050505050565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0949350505050565b80356001600160a01b03811681146104a357600080fd5b919050565b60008083601f8401126104b9578182fd5b50813567ffffffffffffffff8111156104d0578182fd5b6020830191508360208285010111156104e857600080fd5b9250929050565b600060208284031215610500578081fd5b6105098261048c565b9392505050565b600080600080600080600060a0888a03121561052a578283fd5b6105338861048c565b9650602088013567ffffffffffffffff8082111561054f578485fd5b61055b8b838c016104a8565b909850965086915061056f60408b0161048c565b955060608a0135915080821115610584578485fd5b506105918a828b016104a8565b909450925050608088013560ff811681146105aa578182fd5b8091505092959891949750929550565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016010191905056fea2646970667358221220672ccb27322b585fba01666333483db5abf34a38c411279975863ab65983c0bb64736f6c63430008040033";

type ERC20TokenExtensionFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TokenExtensionFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20TokenExtensionFactory__factory extends ContractFactory {
  constructor(...args: ERC20TokenExtensionFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _identityAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20TokenExtensionFactory> {
    return super.deploy(
      _identityAddress,
      overrides || {}
    ) as Promise<ERC20TokenExtensionFactory>;
  }
  override getDeployTransaction(
    _identityAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_identityAddress, overrides || {});
  }
  override attach(address: string): ERC20TokenExtensionFactory {
    return super.attach(address) as ERC20TokenExtensionFactory;
  }
  override connect(signer: Signer): ERC20TokenExtensionFactory__factory {
    return super.connect(signer) as ERC20TokenExtensionFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TokenExtensionFactoryInterface {
    return new utils.Interface(_abi) as ERC20TokenExtensionFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20TokenExtensionFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC20TokenExtensionFactory;
  }
}
