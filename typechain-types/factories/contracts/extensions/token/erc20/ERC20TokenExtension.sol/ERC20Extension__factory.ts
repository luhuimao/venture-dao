/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ERC20Extension,
  ERC20ExtensionInterface,
} from "../../../../../../contracts/extensions/token/erc20/ERC20TokenExtension.sol/ERC20Extension";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dao",
    outputs: [
      {
        internalType: "contract DaoRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "snapshot",
        type: "uint256",
      },
    ],
    name: "getPriorAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DaoRegistry",
        name: "_dao",
        type: "address",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    name: "setDecimals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "setSymbol",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenSymbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000805460ff60a01b1916905534801561001d57600080fd5b50611bd68061002d6000396000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c80636c02a931116100d85780639d76ea581161008c578063c47f002711610066578063c47f002714610304578063dd62ed3e14610317578063fc0c546a1461035057600080fd5b80639d76ea58146102cb578063a9059cbb146102de578063b84c8246146102f157600080fd5b80637a1395aa116100bd5780637a1395aa146102a85780637b61c320146102bb57806395d89b41146102c357600080fd5b80636c02a9311461028d57806370a082311461029557600080fd5b806318160ddd1161013a5780633b97e856116101145780633b97e856146102425780634162169f1461024f578063485cc9551461027a57600080fd5b806318160ddd1461020e57806323b872dd14610216578063313ce5671461022957600080fd5b8063095ea7b31161016b578063095ea7b3146101c2578063144fa6d7146101e5578063158ef93e146101fa57600080fd5b80630435f48b1461018757806306fdde03146101ad575b600080fd5b61019a610195366004611951565b610361565b6040519081526020015b60405180910390f35b6101b56104ac565b6040516101a49190611ac1565b6101d56101d0366004611951565b61053e565b60405190151581526020016101a4565b6101f86101f33660046118a1565b610894565b005b6000546101d590600160a01b900460ff1681565b61019a6109d3565b6101d5610224366004611911565b610b1e565b60045460ff165b60405160ff90911681526020016101a4565b6004546102309060ff1681565b600054610262906001600160a01b031681565b6040516001600160a01b0390911681526020016101a4565b6101f861028836600461199c565b610fbd565b6101b5611249565b61019a6102a33660046118a1565b6112d7565b6101f86102b6366004611aa0565b611423565b6101b56114b1565b6101b56114be565b600154610262906001600160a01b031681565b6101d56102ec366004611951565b6114cd565b6101f86102ff3660046119de565b61156b565b6101f86103123660046119de565b6115dc565b61019a6103253660046118d9565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b6001546001600160a01b0316610262565b60008054604051632c9f4b5b60e11b81527fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a0600482015282916001600160a01b03169063593e96b69060240160206040518083038186803b1580156103c557600080fd5b505afa1580156103d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fd91906118bd565b6001546040517ffaaf38b30000000000000000000000000000000000000000000000000000000081526001600160a01b03878116600483015291821660248201526044810186905291925082169063faaf38b39060640160206040518083038186803b15801561046c57600080fd5b505afa158015610480573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a49190611a88565b949350505050565b6060600280546104bb90611b37565b80601f01602080910402602001604051908101604052809291908181526020018280546104e790611b37565b80156105345780601f1061050957610100808354040283529160200191610534565b820191906000526020600020905b81548152906001019060200180831161051757829003601f168201915b5050505050905090565b600080546040517fc89bb8ba00000000000000000000000000000000000000000000000000000000815233600482015282916001600160a01b03169063c89bb8ba9060240160206040518083038186803b15801561059b57600080fd5b505afa1580156105af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d391906118bd565b90506001600160a01b0381166106555760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6001600160a01b0384166106d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161064c565b6000546040517fa230c5240000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301529091169063a230c5249060240160206040518083038186803b15801561072f57600080fd5b505afa158015610743573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610767919061197c565b6107b35760405162461bcd60e51b815260206004820152601660248201527f73656e646572206973206e6f742061206d656d62657200000000000000000000604482015260640161064c565b6107bc84611649565b61082e5760405162461bcd60e51b815260206004820152602560248201527f7370656e6465722063616e206e6f74206265206120726573657276656420616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161064c565b6001600160a01b0381811660008181526005602090815260408083209489168084529482529182902087905590518681527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35060019392505050565b600054600160a01b900460ff16156108ee5760405162461bcd60e51b815260206004820152601360248201527f616c726561647920696e697469616c697a656400000000000000000000000000604482015260640161064c565b6001600160a01b0381166109445760405162461bcd60e51b815260206004820152601560248201527f696e76616c696420746f6b656e20616464726573730000000000000000000000604482015260640161064c565b61094d81611649565b6109995760405162461bcd60e51b815260206004820152601c60248201527f746f6b656e206164647265737320616c726561647920696e2075736500000000604482015260640161064c565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60008054604051632c9f4b5b60e11b81527fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a0600482015282916001600160a01b03169063593e96b69060240160206040518083038186803b158015610a3757600080fd5b505afa158015610a4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6f91906118bd565b6001546040517ff7888aec00000000000000000000000000000000000000000000000000000000815261babe60048201526001600160a01b03918216602482015291925082169063f7888aec9060440160206040518083038186803b158015610ad757600080fd5b505afa158015610aeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0f91906118bd565b6001600160a01b031691505090565b60006001600160a01b038316610b9c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161064c565b600080546040517f17ba7d850000000000000000000000000000000000000000000000000000000081527f3b502cf501326dc803b7dc895a7a37d8a718496cf2bf54da8a486e0a1f099da160048201526001600160a01b03909116906317ba7d859060240160206040518083038186803b158015610c1957600080fd5b505afa158015610c2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5191906118bd565b600080546001546040517fcf5d0daa0000000000000000000000000000000000000000000000000000000081526001600160a01b039283166004820152908216602482015288821660448201528782166064820152608481018790523360a48201529293509091829184169063cf5d0daa9060c401604080518083038186803b158015610cdd57600080fd5b505afa158015610cf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1591906119ae565b60008054604051632c9f4b5b60e11b81527fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a06004820152939550919350916001600160a01b039091169063593e96b69060240160206040518083038186803b158015610d8057600080fd5b505afa158015610d94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db891906118bd565b90506000836002811115610ddc57634e487b7160e01b600052602160045260246000fd5b1415610e2a5760405162461bcd60e51b815260206004820152601460248201527f7472616e73666572206e6f7420616c6c6f776564000000000000000000000000604482015260640161064c565b6002836002811115610e4c57634e487b7160e01b600052602160045260246000fd5b1415610eb857610e5e8888888461168e565b866001600160a01b0316886001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef88604051610ea391815260200190565b60405180910390a36001945050505050610fb6565b6001600160a01b0388163314610f9a576001600160a01b038816600090815260056020908152604080832033845290915290205486811015610f625760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000606482015260840161064c565b868310610f9857610f738782611b14565b6001600160a01b038a1660009081526005602090815260408083203384529091529020555b505b858210610fad57610e5e8888888461168e565b60009450505050505b9392505050565b600054600160a01b900460ff16156110175760405162461bcd60e51b815260206004820152601360248201527f616c726561647920696e697469616c697a656400000000000000000000000000604482015260640161064c565b6040517fa230c5240000000000000000000000000000000000000000000000000000000081526001600160a01b03828116600483015283169063a230c5249060240160206040518083038186803b15801561107157600080fd5b505afa158015611085573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a9919061197c565b6110f55760405162461bcd60e51b815260206004820152600c60248201527f6e6f742061206d656d6265720000000000000000000000000000000000000000604482015260640161064c565b6001546001600160a01b031661114d5760405162461bcd60e51b815260206004820152601560248201527f6d697373696e6720746f6b656e20616464726573730000000000000000000000604482015260640161064c565b6002805461115a90611b37565b151590506111aa5760405162461bcd60e51b815260206004820152601260248201527f6d697373696e6720746f6b656e206e616d650000000000000000000000000000604482015260640161064c565b600380546111b790611b37565b151590506112075760405162461bcd60e51b815260206004820152601460248201527f6d697373696e6720746f6b656e2073796d626f6c000000000000000000000000604482015260640161064c565b50600080546001600160a01b039092167fffffffffffffffffffffff00000000000000000000000000000000000000000090921691909117600160a01b179055565b6002805461125690611b37565b80601f016020809104026020016040519081016040528092919081815260200182805461128290611b37565b80156112cf5780601f106112a4576101008083540402835291602001916112cf565b820191906000526020600020905b8154815290600101906020018083116112b257829003601f168201915b505050505081565b60008054604051632c9f4b5b60e11b81527fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a0600482015282916001600160a01b03169063593e96b69060240160206040518083038186803b15801561133b57600080fd5b505afa15801561134f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137391906118bd565b6001546040517ff7888aec0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152918216602482015291925082169063f7888aec9060440160206040518083038186803b1580156113db57600080fd5b505afa1580156113ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141391906118bd565b6001600160a01b03169392505050565b600054600160a01b900460ff161561147d5760405162461bcd60e51b815260206004820152601360248201527f616c726561647920696e697469616c697a656400000000000000000000000000604482015260640161064c565b600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff92909216919091179055565b6003805461125690611b37565b6060600380546104bb90611b37565b600080546040517fc89bb8ba000000000000000000000000000000000000000000000000000000008152336004820152610fb6916001600160a01b03169063c89bb8ba9060240160206040518083038186803b15801561152c57600080fd5b505afa158015611540573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156491906118bd565b8484610b1e565b600054600160a01b900460ff16156115c55760405162461bcd60e51b815260206004820152601360248201527f616c726561647920696e697469616c697a656400000000000000000000000000604482015260640161064c565b80516115d8906003906020840190611808565b5050565b600054600160a01b900460ff16156116365760405162461bcd60e51b815260206004820152601360248201527f616c726561647920696e697469616c697a656400000000000000000000000000604482015260640161064c565b80516115d8906002906020840190611808565b60006001600160a01b03821661dead1480159061167157506001600160a01b03821661babe14155b801561168857506001600160a01b038216614bec14155b92915050565b6000546116a59084906001600160a01b031661173a565b6001546040517f44a29e2a0000000000000000000000000000000000000000000000000000000081526001600160a01b0386811660048301528581166024830152918216604482015260648101849052908216906344a29e2a90608401600060405180830381600087803b15801561171c57600080fd5b505af1158015611730573d6000803e3d6000fd5b5050505050505050565b6001600160a01b0382166117905760405162461bcd60e51b815260206004820152601660248201527f696e76616c6964206d656d626572206164647265737300000000000000000000604482015260640161064c565b6040517fdc929f4a0000000000000000000000000000000000000000000000000000000081526001600160a01b03838116600483015282169063dc929f4a90602401600060405180830381600087803b1580156117ec57600080fd5b505af1158015611800573d6000803e3d6000fd5b505050505050565b82805461181490611b37565b90600052602060002090601f016020900481019282611836576000855561187c565b82601f1061184f57805160ff191683800117855561187c565b8280016001018555821561187c579182015b8281111561187c578251825591602001919060010190611861565b5061188892915061188c565b5090565b5b80821115611888576000815560010161188d565b6000602082840312156118b2578081fd5b8135610fb681611b88565b6000602082840312156118ce578081fd5b8151610fb681611b88565b600080604083850312156118eb578081fd5b82356118f681611b88565b9150602083013561190681611b88565b809150509250929050565b600080600060608486031215611925578081fd5b833561193081611b88565b9250602084013561194081611b88565b929592945050506040919091013590565b60008060408385031215611963578182fd5b823561196e81611b88565b946020939093013593505050565b60006020828403121561198d578081fd5b81518015158114610fb6578182fd5b600080604083850312156118eb578182fd5b600080604083850312156119c0578182fd5b8251600381106119ce578283fd5b6020939093015192949293505050565b6000602082840312156119ef578081fd5b813567ffffffffffffffff80821115611a06578283fd5b818401915084601f830112611a19578283fd5b813581811115611a2b57611a2b611b72565b604051601f8201601f19908116603f01168101908382118183101715611a5357611a53611b72565b81604052828152876020848701011115611a6b578586fd5b826020860160208301379182016020019490945295945050505050565b600060208284031215611a99578081fd5b5051919050565b600060208284031215611ab1578081fd5b813560ff81168114610fb6578182fd5b6000602080835283518082850152825b81811015611aed57858101830151858201604001528201611ad1565b81811115611afe5783604083870101525b50601f01601f1916929092016040019392505050565b600082821015611b3257634e487b7160e01b81526011600452602481fd5b500390565b600181811c90821680611b4b57607f821691505b60208210811415611b6c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114611b9d57600080fd5b5056fea2646970667358221220fc6487b7fc7b4449d4f21b74537114a760f725e798b45391cbacf8acca3436e464736f6c63430008040033";

type ERC20ExtensionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ExtensionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Extension__factory extends ContractFactory {
  constructor(...args: ERC20ExtensionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Extension> {
    return super.deploy(overrides || {}) as Promise<ERC20Extension>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20Extension {
    return super.attach(address) as ERC20Extension;
  }
  override connect(signer: Signer): ERC20Extension__factory {
    return super.connect(signer) as ERC20Extension__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20ExtensionInterface {
    return new utils.Interface(_abi) as ERC20ExtensionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Extension {
    return new Contract(address, _abi, signerOrProvider) as ERC20Extension;
  }
}
