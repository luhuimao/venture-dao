/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BankFactory,
  BankFactoryInterface,
} from "../../../../contracts/extensions/bank/BankFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_identityAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "daoAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "extensionAddress",
        type: "address",
      },
    ],
    name: "BankCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dao",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "maxExternalTokens",
        type: "uint8",
      },
    ],
    name: "create",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dao",
        type: "address",
      },
    ],
    name: "getExtensionAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "identityAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161051638038061051683398101604081905261002f916100a2565b60016000556001600160a01b03811661007d5760405162461bcd60e51b815260206004820152600c60248201526b34b73b30b634b21030b2323960a11b604482015260640160405180910390fd5b600180546001600160a01b0319166001600160a01b03929092169190911790556100d0565b6000602082840312156100b3578081fd5b81516001600160a01b03811681146100c9578182fd5b9392505050565b610437806100df6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633146637e146100465780636697a437146100a8578063bf45767a146100bd575b600080fd5b61007f6100543660046103a5565b73ffffffffffffffffffffffffffffffffffffffff9081166000908152600260205260409020541690565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100bb6100b63660046103c6565b6100dd565b005b60015461007f9073ffffffffffffffffffffffffffffffffffffffff1681565b6002600054141561014f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260005573ffffffffffffffffffffffffffffffffffffffff82166101d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f696e76616c69642064616f2061646472000000000000000000000000000000006044820152606401610146565b6001546000906101f69073ffffffffffffffffffffffffffffffffffffffff16610313565b73ffffffffffffffffffffffffffffffffffffffff8481166000908152600260205260409081902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169284169283179055517f8f02487800000000000000000000000000000000000000000000000000000000815260ff851660048201529192508291638f02487890602401600060405180830381600087803b15801561029f57600080fd5b505af11580156102b3573d6000803e3d6000fd5b50506040805173ffffffffffffffffffffffffffffffffffffffff8089168252851660208201527f7e5337f187d761895980242ae2148ec29fc88dbfb602b00846d90ae73f9edda7935001905060405180910390a1505060016000555050565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0949350505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146103a057600080fd5b919050565b6000602082840312156103b6578081fd5b6103bf8261037c565b9392505050565b600080604083850312156103d8578081fd5b6103e18361037c565b9150602083013560ff811681146103f6578182fd5b80915050925092905056fea2646970667358221220793c1914fe0e5693576072cde2b34d5710217f74fef5e510dc083b67b4d98b5064736f6c63430008040033";

type BankFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BankFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BankFactory__factory extends ContractFactory {
  constructor(...args: BankFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _identityAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BankFactory> {
    return super.deploy(
      _identityAddress,
      overrides || {}
    ) as Promise<BankFactory>;
  }
  override getDeployTransaction(
    _identityAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_identityAddress, overrides || {});
  }
  override attach(address: string): BankFactory {
    return super.attach(address) as BankFactory;
  }
  override connect(signer: Signer): BankFactory__factory {
    return super.connect(signer) as BankFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BankFactoryInterface {
    return new utils.Interface(_abi) as BankFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BankFactory {
    return new Contract(address, _abi, signerOrProvider) as BankFactory;
  }
}
