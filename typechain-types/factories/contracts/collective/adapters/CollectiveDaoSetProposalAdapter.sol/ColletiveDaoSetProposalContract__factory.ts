/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ColletiveDaoSetProposalContract,
  ColletiveDaoSetProposalContractInterface,
} from "../../../../../contracts/collective/adapters/CollectiveDaoSetProposalAdapter.sol/ColletiveDaoSetProposalContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract DaoRegistry",
        name: "dao",
        type: "address",
      },
    ],
    name: "isProposalAllDone",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060c18061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80639a0242fc14602d575b600080fd5b603e60383660046052565b50600190565b604051901515815260200160405180910390f35b6000602082840312156062578081fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146084578182fd5b939250505056fea26469706673582212206a58c25b31523372d08fccaab05d156cd891841cc3b6841b49964e936c38851564736f6c63430008040033";

type ColletiveDaoSetProposalContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ColletiveDaoSetProposalContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ColletiveDaoSetProposalContract__factory extends ContractFactory {
  constructor(...args: ColletiveDaoSetProposalContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ColletiveDaoSetProposalContract> {
    return super.deploy(
      overrides || {}
    ) as Promise<ColletiveDaoSetProposalContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ColletiveDaoSetProposalContract {
    return super.attach(address) as ColletiveDaoSetProposalContract;
  }
  override connect(signer: Signer): ColletiveDaoSetProposalContract__factory {
    return super.connect(signer) as ColletiveDaoSetProposalContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ColletiveDaoSetProposalContractInterface {
    return new utils.Interface(
      _abi
    ) as ColletiveDaoSetProposalContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ColletiveDaoSetProposalContract {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ColletiveDaoSetProposalContract;
  }
}
