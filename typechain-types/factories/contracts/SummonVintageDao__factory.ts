/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SummonVintageDao,
  SummonVintageDaoInterface,
} from "../../contracts/SummonVintageDao";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "daoFactoryAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "daoAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "VintageDaoCreated",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct SummonVintageDao.VintageCall[8]",
        name: "calls",
        type: "tuple[8]",
      },
    ],
    name: "multiVintageCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "daoName",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "daoFactoriesAddress",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "id",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "uint128",
                name: "flags",
                type: "uint128",
              },
            ],
            internalType: "struct DaoFactory.Adapter[]",
            name: "enalbeAdapters",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "id",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "uint128",
                name: "flags",
                type: "uint128",
              },
            ],
            internalType: "struct DaoFactory.Adapter[]",
            name: "adapters1",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "enable",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "cap",
                type: "uint256",
              },
            ],
            internalType: "struct SummonVintageDao.VintageInvestorCapInfo",
            name: "investorCap",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "enable",
                type: "bool",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "uint8",
                name: "varifyType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "minAmount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "whiteList",
                type: "address[]",
              },
            ],
            internalType: "struct SummonVintageDao.VintageInvestorMembership",
            name: "investorMembership",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "enable",
                type: "bool",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "uint8",
                name: "varifyType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "minAmount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "whiteList",
                type: "address[]",
              },
            ],
            internalType: "struct SummonVintageDao.VintageGovernorMembership",
            name: "governorMembership",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "votingAssetType",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenID",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "votingWeightedType",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "supportType",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "quorumType",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "support",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "quorum",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "votingPeriod",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executingPeriod",
                type: "uint256",
              },
            ],
            internalType: "struct SummonVintageDao.VintageVotingInfo",
            name: "votingInfo",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "genesisGovernors",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "allocations",
            type: "uint256[]",
          },
          {
            internalType: "address",
            name: "riceRewardReceiver",
            type: "address",
          },
        ],
        internalType: "struct SummonVintageDao.VintageDaoParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "summonVintageDao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "daoFacAddr",
        type: "address",
      },
      {
        internalType: "string",
        name: "daoName",
        type: "string",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "summonVintageDao1",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vintageFundingPoolFacAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "summonVintageDao2",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "daoFacAddr",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "flags",
            type: "uint128",
          },
        ],
        internalType: "struct DaoFactory.Adapter[]",
        name: "enalbeAdapters",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
    ],
    name: "summonVintageDao3",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "daoFacAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "vintageFundingPoolFacAddr",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "flags",
            type: "uint128",
          },
        ],
        internalType: "struct DaoFactory.Adapter[]",
        name: "adapters1",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
    ],
    name: "summonVintageDao4",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "vintageDaoStewardMembershipEnable",
        type: "bool",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256[3]",
        name: "uint256Params",
        type: "uint256[3]",
      },
      {
        internalType: "address",
        name: "vintageDaoStewardMembershipTokenAddress",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "vintageDaoGovernorMembershipWhitelist",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
    ],
    name: "summonVintageDao5",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "riceReceiver",
        type: "address",
      },
      {
        internalType: "uint256[9]",
        name: "votingInfo",
        type: "uint256[9]",
      },
    ],
    name: "summonVintageDao6",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "votingAssetType",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "genesisGovernors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "allcationValues",
        type: "uint256[]",
      },
    ],
    name: "summonVintageDao7",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "enable",
        type: "bool",
      },
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "varifyType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "minHolding",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "vintageDaoInvestorMembershipWhitelist",
        type: "address[]",
      },
    ],
    name: "summonVintageDao8",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enable",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "cap",
        type: "uint256",
      },
    ],
    name: "summonVintageDao9",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50613b7b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80635247f78e11610081578063ab1025d31161005b578063ab1025d31461017c578063aca539931461018f578063fd00f123146101a257600080fd5b80635247f78e14610141578063681cda36146101545780637e24e3441461016957600080fd5b806317d0c640116100b257806317d0c640146101085780632c87c58f1461011b5780634a1ec9921461012e57600080fd5b806304014327146100ce57806312f58612146100f5575b600080fd5b6100e16100dc366004613109565b6101b5565b604051901515815260200160405180910390f35b6100e1610103366004612ebd565b6106c7565b6100e1610116366004612ddc565b6107dd565b6100e1610129366004612e57565b610916565b6100e161013c366004612d32565b6109af565b6100e161014f366004612f41565b610b58565b6101676101623660046132d0565b610e06565b005b6100e1610177366004612d7c565b611adf565b6100e161018a3660046131d8565b61208a565b61016761019d366004612fca565b61264f565b6100e16101b0366004612efa565b612774565b6000893033146101c457600080fd5b8b156106b557604051630da0f6c760e41b81527f1405d0156cf64c805704fdf6691baebfcfa0d409ea827c231693ff0581b0b7776004820152600160248201526001600160a01b0382169063da0f6c7090604401600060405180830381600087803b15801561023257600080fd5b505af1158015610246573d6000803e3d6000fd5b50506040517ff958b7100000000000000000000000000000000000000000000000000000000081526001600160a01b038416925063f958b71091506102b3907f324dfda0ffcc38c4650b5df076e6f7b4938c2b723873af58b1be5e221dd2cc30908e908e9060040161374d565b600060405180830381600087803b1580156102cd57600080fd5b505af11580156102e1573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527f80140cd7e0b1d935bee578a67a41547c82987de8e7d6b3827d411b738110258b600482015260ff8b1660248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b15801561034f57600080fd5b505af1158015610363573d6000803e3d6000fd5b505050508760ff166000148061037c57508760ff166001145b8061038a57508760ff166002145b1561049157604051630da0f6c760e41b81527f04ecaf460eb9f82aeb70035e3f24c18a3650fa0da9ddbe7e63d70de659b9b9016004820152602481018890526001600160a01b0382169063da0f6c7090604401600060405180830381600087803b1580156103f757600080fd5b505af115801561040b573d6000803e3d6000fd5b5050604051631da7c90d60e11b81527fe373ab56628c86db3f0e36774c2c5e0393f9272ff5c976bc3f0db2db60cdbc1460048201526001600160a01b03888116602483015284169250633b4f921a9150604401600060405180830381600087803b15801561047857600080fd5b505af115801561048c573d6000803e3d6000fd5b505050505b8760ff166002141561051e57604051630da0f6c760e41b81527f6cb5bc3796b0717ca4ff665886c96fb0178d6341366eb7b6c737fe79083b836a6004820152602481018790526001600160a01b0382169063da0f6c7090604401600060405180830381600087803b15801561050557600080fd5b505af1158015610519573d6000803e3d6000fd5b505050505b8760ff16600314801561053057508215155b156106b5576040516317ba7d8560e01b81527faaff643bdbd909f604d46ce015336f7e20fee3ac4a55cef3610188dee176c89260048201526000906001600160a01b038316906317ba7d859060240160206040518083038186803b15801561059757600080fd5b505afa1580156105ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cf9190612d16565b905060005b60ff81168511156106b257816001600160a01b031663ac7e7eba8488888560ff1681811061061257634e487b7160e01b600052603260045260246000fd5b90506020020160208101906106279190612cf3565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381600087803b15801561068757600080fd5b505af115801561069b573d6000803e3d6000fd5b5050505080806106aa90613ab7565b9150506105d4565b50505b5060019b9a5050505050505050505050565b600082156107d357604051630da0f6c760e41b81527f69f4ffb3ebcb7809550bddd3e4d449a47e737bf6635bc7a730996643997b0e4860048201526001602482015284906001600160a01b0382169063da0f6c7090604401600060405180830381600087803b15801561073957600080fd5b505af115801561074d573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527fecbde689cc6337d29a750b8b8a8abbfa97427b4ac800ab55be2f2c87311510f26004820152602481018690526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b1580156107b957600080fd5b505af11580156107cd573d6000803e3d6000fd5b50505050505b5060019392505050565b6000813033146107ec57600080fd5b6040517f3146637e0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301528891889160009190831690633146637e9060240160206040518083038186803b15801561084e57600080fd5b505afa158015610862573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108869190612d16565b6040517f29ca12ed0000000000000000000000000000000000000000000000000000000081529091506001600160a01b038416906329ca12ed906108d490879085908d908d90600401613770565b600060405180830381600087803b1580156108ee57600080fd5b505af1158015610902573d6000803e3d6000fd5b5060019d9c50505050505050505050505050565b60008130331461092557600080fd5b6040517f9bb2008400000000000000000000000000000000000000000000000000000000815286906001600160a01b03821690639bb20084906109709085908a908a906004016137a7565b600060405180830381600087803b15801561098a57600080fd5b505af115801561099e573d6000803e3d6000fd5b5060019a9950505050505050505050565b60003033146109bd57600080fd5b6040517f9ed933180000000000000000000000000000000000000000000000000000000081526001600160a01b038481166004830152859190821690639ed9331890602401600060405180830381600087803b158015610a1c57600080fd5b505af1158015610a30573d6000803e3d6000fd5b50506040517f3146637e0000000000000000000000000000000000000000000000000000000081526001600160a01b0387811660048301526000935084169150633146637e9060240160206040518083038186803b158015610a9157600080fd5b505afa158015610aa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac99190612d16565b6040517fc130c6390000000000000000000000000000000000000000000000000000000081527f161fca6912f107b0f13c9c7275de7391b32d2ea1c52ffba65a3c961880a0c60f60048201526001600160a01b0380831660248301528681166044830152919250869182169063c130c63990606401600060405180830381600087803b15801561098a57600080fd5b6040516317ba7d8560e01b81527f1fa6846b165d822fff79e37c67625706652fa9380c2aa49fd513ce534cc72ed46004820152600090879082906001600160a01b038316906317ba7d859060240160206040518083038186803b158015610bbe57600080fd5b505afa158015610bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf69190612d16565b90508760031415610ca457610ca48183846001600160a01b031663149acf9a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c3f57600080fd5b505afa158015610c53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c779190612d16565b88886000818110610c9857634e487b7160e01b600052603260045260246000fd5b90506020020135612963565b8515610df75760005b60ff8116871115610df557826001600160a01b031663dc929f4a89898460ff16818110610cea57634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610cff9190612cf3565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b158015610d5857600080fd5b505af1158015610d6c573d6000803e3d6000fd5b505050508860031415610de357610de382848a8a8560ff16818110610da157634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610db69190612cf3565b8989610dc38760016139fe565b60ff16818110610c9857634e487b7160e01b600052603260045260246000fd5b80610ded81613ab7565b915050610cad565b505b50600198975050505050505050565b610e0e612b42565b610e1b604083018361383e565b6000818110610e3a57634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610e4f9190612cf3565b610e5983806138cd565b610e696040860160208701612cf3565b604051602401610e7c94939291906135b7565b60408051601f198184030181529181526020820180516001600160e01b03167ffd00f12300000000000000000000000000000000000000000000000000000000179052818352513091610ece91613409565b6000604051808303816000865af19150503d8060008114610f0b576040519150601f19603f3d011682016040523d82523d6000602084013e610f10565b606091505b5061014083015215156101208201819052610f985760405162461bcd60e51b815260206004820152603360248201527f6c6f772d6c6576656c2063616c6c206f662066756e6374696f6e2073756d6d6f60448201527f6e56696e7461676544616f31206661696c65640000000000000000000000000060648201526084015b60405180910390fd5b6000610fa483806138cd565b604051602401610fb59291906137ca565b60408051601f198184030181529181526020820180516001600160e01b03167f1d1f0a27000000000000000000000000000000000000000000000000000000001790529091506110079084018461383e565b600081811061102657634e487b7160e01b600052603260045260246000fd5b905060200201602081019061103b9190612cf3565b6001600160a01b0316816040516110529190613409565b6000604051808303816000865af19150503d806000811461108f576040519150601f19603f3d011682016040523d82523d6000602084013e611094565b606091505b5061014084018190529015801561012085018190526020909201516001600160a01b03166101608501526110d557506101608201516001600160a01b031615155b6110de57600080fd5b6110eb604084018461383e565b600181811061110a57634e487b7160e01b600052603260045260246000fd5b905060200201602081019061111f9190612cf3565b6101608301516111356040860160208701612cf3565b6040516001600160a01b0393841660248201529183166044830152909116606482015260840160408051601f19818403018152918152602080830180516001600160e01b03167f4a1ec992000000000000000000000000000000000000000000000000000000001790528401919091526111b19084018461383e565b60008181106111d057634e487b7160e01b600052603260045260246000fd5b90506020020160208101906111e59190612cf3565b6111f26060850185613886565b84610160015160405160240161120b949392919061357f565b60408051601f198184030181529181526020820180516001600160e01b03167f2c87c58f00000000000000000000000000000000000000000000000000000000179052838101919091526112619084018461383e565b600081811061128057634e487b7160e01b600052603260045260246000fd5b90506020020160208101906112959190612cf3565b6112a2604085018561383e565b60018181106112c157634e487b7160e01b600052603260045260246000fd5b90506020020160208101906112d69190612cf3565b6112e36080860186613886565b8561016001516040516024016112fd959493929190613512565b60408051601f198184030181529181526020820180516001600160e01b03167f17d0c640000000000000000000000000000000000000000000000000000000001790526060808501929092528051918201905260009080611362610100870187613912565b611373906060810190604001613309565b60ff168152602001611389610100870187613912565b6060013581526020016113a0610100870187613912565b60a00135905290506113b6610100850185613912565b6113c49060208101906130ef565b6113d2610100860186613912565b6113e09060208101906138cd565b836113ef610100890189613912565b6114009060a0810190608001612cf3565b61140e6101008a018a613912565b61141c9060c081019061383e565b8961016001516040516024016114399897969594939291906136c9565b60408051601f19818403018152918152602080830180516001600160e01b03167fab1025d300000000000000000000000000000000000000000000000000000000179052608080870193909352815161012080820184528801358152610160808901803593830193909352610180890135938201939093526101a088013560608201526101c08801359381019390935261020087013560a08401526101e087013560c084015261022087013560e08401526102408701356101008401529085015190611509906101408801612cf3565b61151b6102c088016102a08901612cf3565b8360405160240161152f94939291906134b7565b60408051601f198184030181529190526020810180516001600160e01b03167f7e24e3440000000000000000000000000000000000000000000000000000000017905260a085015261016084015161012086013561159161026088018861383e565b61159f6102808a018a61383e565b6040516024016115b4969594939291906135db565b60408051601f198184030181529190526020810180516001600160e01b03167f5247f78e0000000000000000000000000000000000000000000000000000000017905260c085015261160960e0860186613912565b6116179060208101906130ef565b61016085015161162a60e0880188613912565b6116389060208101906138cd565b61164560e08a018a613912565b611656906060810190604001613309565b61166360e08b018b613912565b6060013561167460e08c018c613912565b60a0013561168560e08d018d613912565b6116969060a0810190608001612cf3565b6116a360e08e018e613912565b6116b19060c081019061383e565b6040516024016116ca9a99989796959493929190613658565b60408051601f198184030181529190526020810180516001600160e01b03167f040143270000000000000000000000000000000000000000000000000000000017905260e085015261016084015161172860c0870160a088016130ef565b604080516001600160a01b03939093166024840152901515604483015260c0878101356064808501919091528251808503909101815260849093018252602080840180516001600160e01b03167f12f58612000000000000000000000000000000000000000000000000000000001790526101008801938452825180840184523080825289830151828401526101808a01805192909252845180860186528181528a860151818501528251840152845180860186528181526060808c0151828601528351870191909152855180870187528281526080808d0151828701528451909201528551808701875282815260a0808d015182870152845190920152855180870187528281528b860151818601528351909101528451808601865281815260e0808c0151828601528351909501528451808601909552845293519083015282510152516118769061264f565b60008461016001519050806001600160a01b0316630b1ca49a826001600160a01b03166348f7f2a36040518163ffffffff1660e01b815260040160206040518083038186803b1580156118c857600080fd5b505afa1580156118dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119009190612d16565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b15801561195957600080fd5b505af115801561196d573d6000803e3d6000fd5b50505050806001600160a01b0316636503287f6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156119ac57600080fd5b505af11580156119c0573d6000803e3d6000fd5b50506040516317ba7d8560e01b81527fd90e10040720d66c9412cb511e3dbb6ba51669248a7495e763d44ab426893efa6004820152600092506001600160a01b03841691506317ba7d859060240160206040518083038186803b158015611a2657600080fd5b505afa158015611a3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5e9190612d16565b6040517fd32b91dd0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301529192509082169063d32b91dd90602401600060405180830381600087803b158015611abe57600080fd5b505af1158015611ad2573d6000803e3d6000fd5b5050505050505050505050565b604051630da0f6c760e41b81527f686efe7bd1699b408d306db6bbee658ed667971c52d48d6912d7ee496e36e62760048201528135602482015260009085906001600160a01b0382169063da0f6c7090604401600060405180830381600087803b158015611b4c57600080fd5b505af1158015611b60573d6000803e3d6000fd5b5050604051631da7c90d60e11b81527fcd9b30ab6388c165d825b60b7d393528191ba59d975b4b1b52b7184b63b8a97c60048201526001600160a01b03888116602483015284169250633b4f921a9150604401600060405180830381600087803b158015611bcd57600080fd5b505af1158015611be1573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527e634460a4b60c2e1bf8c87bfc42b6b68fd2a71f4bb2d760816eabc5038b50366004820152602086013560248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b158015611c4f57600080fd5b505af1158015611c63573d6000803e3d6000fd5b505060408051630da0f6c760e41b81527fb75eae231d9582c6afc6491273df4a0ffbccd48ab2c48dbce59e5d68f2d19dc460048201529086013560248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b158015611cd257600080fd5b505af1158015611ce6573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527f561bc86bc227a0f760218574791a84f180f6f9f02be9519a1f99c14fce07a3106004820152606086013560248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b158015611d5557600080fd5b505af1158015611d69573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527f8097540b5ab8a4c18e0b10cfbfd2c69e65e8da78f4f0485467006bafa39359646004820152608086013560248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b158015611dd857600080fd5b505af1158015611dec573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527f0324de13a5a6e302ddb95a9fdf81cc736fc8acee2abe558970daac27395904e7600482015260a086013560248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b158015611e5b57600080fd5b505af1158015611e6f573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527fb4c601c38beae7eebb719eda3438f59fcbfd4c6dd7d38c00665b6fd5b432df32600482015260c086013560248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b158015611ede57600080fd5b505af1158015611ef2573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527f9876c0f0505bfb2b1c38d3bbd25ba13159172cd0868972d76927723f5a9480fc600482015260e086013560248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b158015611f6157600080fd5b505af1158015611f75573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527f02a3530cbb6e7c084516c86f68bd62c3e3fcd783c6c5d7e138616207f7a32250600482015261010086013560248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b158015611fe557600080fd5b505af1158015611ff9573d6000803e3d6000fd5b5050604051631da7c90d60e11b81527fc77068975ba2254bd67080aa196783f213ee682a15d902d03f33782130cf737d60048201526001600160a01b03878116602483015284169250633b4f921a9150604401600060405180830381600087803b15801561206657600080fd5b505af115801561207a573d6000803e3d6000fd5b5060019998505050505050505050565b60008130331461209957600080fd5b891561207a57604051630da0f6c760e41b81527f5b7b19076468102b84afbef323d128866c396a716ce4ce29f84beef8d266f3af6004820152600160248201526001600160a01b0382169063da0f6c7090604401600060405180830381600087803b15801561210757600080fd5b505af115801561211b573d6000803e3d6000fd5b50506040517ff958b7100000000000000000000000000000000000000000000000000000000081526001600160a01b038416925063f958b7109150612188907fa4b6f581a2d1e8b24bacedf9a91a13c8df6147ffb9d2bd4a770d867d91018da6908d908d9060040161374d565b600060405180830381600087803b1580156121a257600080fd5b505af11580156121b6573d6000803e3d6000fd5b50508851604051630da0f6c760e41b81527f23f0530138a805a7a3c83e0d6298d353102473dc25666f75173de90ac5414c82600482015260248101919091526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b15801561222557600080fd5b505af1158015612239573d6000803e3d6000fd5b505050508660006003811061225e57634e487b7160e01b600052603260045260246000fd5b60200201511580612270575086516001145b8061227c575086516002145b15612389576020870151604051630da0f6c760e41b81527f4481bb4c8bc94e65f81ab5591f704165aab99eb4197df7acf672022476933f58600482015260248101919091526001600160a01b0382169063da0f6c7090604401600060405180830381600087803b1580156122ef57600080fd5b505af1158015612303573d6000803e3d6000fd5b5050604051631da7c90d60e11b81527faa2cc36fff47c5c104b89a4abef628c92272c0af9c4db27739bc445b2f51e9a260048201526001600160a01b03898116602483015284169250633b4f921a9150604401600060405180830381600087803b15801561237057600080fd5b505af1158015612384573d6000803e3d6000fd5b505050505b86516002141561241a576040808801519051630da0f6c760e41b81527fe33a9c3c87c85b9efd09c180b8fd30ca34326eb72e20fdd832b510971ccf71ae600482015260248101919091526001600160a01b0382169063da0f6c7090604401600060405180830381600087803b15801561240157600080fd5b505af1158015612415573d6000803e3d6000fd5b505050505b8651600414156124ab576020870151604051630da0f6c760e41b81527f38cbcea6ba035c1d1890c83ce99918342ef746d839f9c2e2d4966d30a7e70b34600482015260248101919091526001600160a01b0382169063da0f6c7090604401600060405180830381600087803b15801561249257600080fd5b505af11580156124a6573d6000803e3d6000fd5b505050505b865160031480156124bb57508315155b1561207a576040516317ba7d8560e01b81527fd90e10040720d66c9412cb511e3dbb6ba51669248a7495e763d44ab426893efa60048201526000906001600160a01b038316906317ba7d859060240160206040518083038186803b15801561252257600080fd5b505afa158015612536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061255a9190612d16565b905060005b60ff811686111561263d57816001600160a01b03166333f7bc0c8489898560ff1681811061259d57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906125b29190612cf3565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381600087803b15801561261257600080fd5b505af1158015612626573d6000803e3d6000fd5b50505050808061263590613ab7565b91505061255f565b50505060019998505050505050505050565b60005b600881101561277057600082826008811061267d57634e487b7160e01b600052603260045260246000fd5b6020020151516001600160a01b03168383600881106126ac57634e487b7160e01b600052603260045260246000fd5b6020020151602001516040516126c29190613409565b6000604051808303816000865af19150503d80600081146126ff576040519150601f19603f3d011682016040523d82523d6000602084013e612704565b606091505b505090508061271e83600261271991906139e6565b6129ec565b60405160200161272e9190613425565b6040516020818303038152906040529061275b5760405162461bcd60e51b8152600401610f8f919061380b565b5050808061276890613a7e565b915050612652565b5050565b600030331461278257600080fd5b6040517f3baeff3f00000000000000000000000000000000000000000000000000000000815285906001600160a01b03821690633baeff3f906127cd908890889088906004016137de565b600060405180830381600087803b1580156127e757600080fd5b505af11580156127fb573d6000803e3d6000fd5b50506040517f1d1f0a27000000000000000000000000000000000000000000000000000000008152600092506001600160a01b0384169150631d1f0a279061284990899089906004016137ca565b60206040518083038186803b15801561286157600080fd5b505afa158015612875573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128999190612d16565b90506001600160a01b0381166129175760405162461bcd60e51b815260206004820152602f60248201527f53756d6d6d6f6e44616f3a3a73756d6d6f6e56696e7461676544616f3a3a637260448201527f656174652064616f206661696c656400000000000000000000000000000000006064820152608401610f8f565b7fc97f13857137bdfa897b81b7697bbd055e5d99fc946c3a047235235c3bd87db0878288888860405161294e959493929190613553565b60405180910390a15060019695505050505050565b6040517f5f15b1d90000000000000000000000000000000000000000000000000000000081526001600160a01b038481166004830152838116602483015260448201839052851690635f15b1d990606401600060405180830381600087803b1580156129ce57600080fd5b505af11580156129e2573d6000803e3d6000fd5b5050505050505050565b606081612a2c57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115612a565780612a4081613a7e565b9150612a4f9050600a83613a23565b9150612a30565b60008167ffffffffffffffff811115612a7f57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015612aa9576020820181803683370190505b5090505b8415612b3a57612abe600183613a37565b9150612acb600a86613ad7565b612ad69060306139e6565b60f81b818381518110612af957634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612b33600a86613a23565b9450612aad565b949350505050565b604051806101a001604052806060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016000151581526020016060815260200160006001600160a01b03168152602001612bb5612bba565b905290565b6040518061010001604052806008905b604080518082019091526000815260606020820152815260200190600190039081612bca5790505090565b8035612c0081613b2d565b919050565b60008083601f840112612c16578182fd5b50813567ffffffffffffffff811115612c2d578182fd5b6020830191508360208260051b8501011115612c4857600080fd5b9250929050565b60008083601f840112612c60578182fd5b50813567ffffffffffffffff811115612c77578182fd5b602083019150836020606083028501011115612c4857600080fd5b80358015158114612c0057600080fd5b60008083601f840112612cb3578182fd5b50813567ffffffffffffffff811115612cca578182fd5b602083019150836020828501011115612c4857600080fd5b803560ff81168114612c0057600080fd5b600060208284031215612d04578081fd5b8135612d0f81613b2d565b9392505050565b600060208284031215612d27578081fd5b8151612d0f81613b2d565b600080600060608486031215612d46578182fd5b8335612d5181613b2d565b92506020840135612d6181613b2d565b91506040840135612d7181613b2d565b809150509250925092565b600080600080610180808688031215612d93578182fd5b8535612d9e81613b2d565b94506020860135612dae81613b2d565b93506040860135612dbe81613b2d565b9250858101871015612dce578182fd5b509295919450926060019150565b600080600080600060808688031215612df3578081fd5b8535612dfe81613b2d565b94506020860135612e0e81613b2d565b9350604086013567ffffffffffffffff811115612e29578182fd5b612e3588828901612c4f565b9094509250506060860135612e4981613b2d565b809150509295509295909350565b60008060008060608587031215612e6c578182fd5b8435612e7781613b2d565b9350602085013567ffffffffffffffff811115612e92578283fd5b612e9e87828801612c4f565b9094509250506040850135612eb281613b2d565b939692955090935050565b600080600060608486031215612ed1578081fd5b8335612edc81613b2d565b9250612eea60208501612c92565b9150604084013590509250925092565b60008060008060608587031215612f0f578182fd5b8435612f1a81613b2d565b9350602085013567ffffffffffffffff811115612f35578283fd5b612e9e87828801612ca2565b60008060008060008060808789031215612f59578384fd5b8635612f6481613b2d565b955060208701359450604087013567ffffffffffffffff80821115612f87578586fd5b612f938a838b01612c05565b90965094506060890135915080821115612fab578283fd5b50612fb889828a01612c05565b979a9699509497509295939492505050565b60006020808385031215612fdc578182fd5b823567ffffffffffffffff80821115612ff3578384fd5b8185019150601f8681840112613007578485fd5b61300f61396e565b80848961010087011115613021578788fd5b875b60088110156130e05781358681111561303a57898afd5b87016040818d03121561304b57898afd5b613053613945565b813561305e81613b2d565b8152818a013588811115613070578b8cfd5b8083019250508c87830112613083578a8bfd5b81358881111561309557613095613b17565b6130a68b601f198a840116016139b5565b8181528e8c8386010111156130b9578c8dfd5b818c85018d8301379081018b018c9052818b01528552509287019290870190600101613023565b50909998505050505050505050565b600060208284031215613100578081fd5b612d0f82612c92565b6000806000806000806000806000806101008b8d031215613128578788fd5b6131318b612c92565b995060208b013561314181613b2d565b985060408b013567ffffffffffffffff8082111561315d57898afd5b6131698e838f01612ca2565b909a50985088915061317d60608e01612ce2565b975060808d0135965060a08d0135955060c08d0135915061319d82613b2d565b90935060e08c013590808211156131b2578384fd5b506131bf8d828e01612c05565b915080935050809150509295989b9194979a5092959850565b600080600080600080600080610100898b0312156131f4578182fd5b6131fd89612c92565b97506020808a013567ffffffffffffffff8082111561321a578485fd5b6132268d838e01612ca2565b9250809a50508198508c605f8d011261323d578485fd5b613245613992565b91508160408d0160a08e018f81111561325c578788fd5b875b600381101561327b5782358652948601949186019160010161325e565b50829a5061328881612bf5565b995050505060c08c01359250808311156132a0578485fd5b50506132ae8b828c01612c05565b90945092506132c1905060e08a01612bf5565b90509295985092959890939650565b6000602082840312156132e1578081fd5b813567ffffffffffffffff8111156132f7578182fd5b82016102c08185031215612d0f578182fd5b60006020828403121561331a578081fd5b612d0f82612ce2565b81835260006020808501945082825b8581101561336057813561334581613b2d565b6001600160a01b031687529582019590820190600101613332565b509495945050505050565b81835260006020808501945082825b8581101561336057813587528282013561339381613b2d565b6001600160a01b0316878401526040828101356fffffffffffffffffffffffffffffffff81168082146133c4578687fd5b9189019190915250606096870196919091019060010161337a565b8183528181602085013750600080602083850101526020601f19601f840116840101905092915050565b6000825161341b818460208701613a4e565b9190910192915050565b7f6c6f772d6c6576656c2063616c6c206f662073756d6d6f6e56696e746167654481527f616f000000000000000000000000000000000000000000000000000000000000602082015260008251613483816022850160208701613a4e565b7f206661696c6564000000000000000000000000000000000000000000000000006022939091019283015250602901919050565b6000610180820190506001600160a01b03808716835260208187168185015281861660408501526060840191508460005b6009811015613505578151845292820192908201906001016134e8565b5050505095945050505050565b60006001600160a01b03808816835280871660208401526080604084015261353e60808401868861336b565b91508084166060840152509695505050505050565b60006001600160a01b03808816835280871660208401526080604084015261353e6080840186886133df565b60006001600160a01b038087168352606060208401526135a360608401868861336b565b915080841660408401525095945050505050565b60006001600160a01b038087168352606060208401526135a36060840186886133df565b6001600160a01b0387168152856020820152608060408201526000613604608083018688613323565b82810360608401528381527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84111561363b578182fd5b8360051b8086602084013701602001908152979650505050505050565b60006101008c151583526001600160a01b03808d1660208501528160408501526136858285018c8e6133df565b915060ff8a1660608501528860808501528760a085015280871660c08501525082810360e08401526136b8818587613323565b9d9c50505050505050505050505050565b60006101008a15158352602081818501526136e78285018b8d6133df565b91506040840189845b600381101561370d578151835291830191908301906001016136f0565b505050506001600160a01b0380881660a085015283820360c0850152613734828789613323565b925080851660e085015250509998505050505050505050565b8381526040602082015260006137676040830184866133df565b95945050505050565b60006001600160a01b0380871683528086166020840152506060604083015261379d60608301848661336b565b9695505050505050565b6001600160a01b038416815260406020820152600061376760408301848661336b565b602081526000612b3a6020830184866133df565b6040815260006137f26040830185876133df565b90506001600160a01b0383166020830152949350505050565b602081526000825180602084015261382a816040850160208701613a4e565b601f01601f19169190910160400192915050565b6000808335601e19843603018112613854578283fd5b83018035915067ffffffffffffffff82111561386e578283fd5b6020019150600581901b3603821315612c4857600080fd5b6000808335601e1984360301811261389c578283fd5b83018035915067ffffffffffffffff8211156138b6578283fd5b6020019150606081023603821315612c4857600080fd5b6000808335601e198436030181126138e3578283fd5b83018035915067ffffffffffffffff8211156138fd578283fd5b602001915036819003821315612c4857600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261341b578182fd5b6040805190810167ffffffffffffffff8111828210171561396857613968613b17565b60405290565b604051610100810167ffffffffffffffff8111828210171561396857613968613b17565b6040516060810167ffffffffffffffff8111828210171561396857613968613b17565b604051601f8201601f1916810167ffffffffffffffff811182821017156139de576139de613b17565b604052919050565b600082198211156139f9576139f9613aeb565b500190565b600060ff821660ff84168060ff03821115613a1b57613a1b613aeb565b019392505050565b600082613a3257613a32613b01565b500490565b600082821015613a4957613a49613aeb565b500390565b60005b83811015613a69578181015183820152602001613a51565b83811115613a78576000848401525b50505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613ab057613ab0613aeb565b5060010190565b600060ff821660ff811415613ace57613ace613aeb565b60010192915050565b600082613ae657613ae6613b01565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114613b4257600080fd5b5056fea2646970667358221220f2209fe19b4001423599dab8de4b32762438b3c1e4bbb840bb62a5b8e429039c64736f6c63430008040033";

type SummonVintageDaoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SummonVintageDaoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SummonVintageDao__factory extends ContractFactory {
  constructor(...args: SummonVintageDaoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SummonVintageDao> {
    return super.deploy(overrides || {}) as Promise<SummonVintageDao>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SummonVintageDao {
    return super.attach(address) as SummonVintageDao;
  }
  override connect(signer: Signer): SummonVintageDao__factory {
    return super.connect(signer) as SummonVintageDao__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SummonVintageDaoInterface {
    return new utils.Interface(_abi) as SummonVintageDaoInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SummonVintageDao {
    return new Contract(address, _abi, signerOrProvider) as SummonVintageDao;
  }
}
