/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SummonVintageDao,
  SummonVintageDaoInterface,
} from "../../contracts/SummonVintageDao";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "daoFactoryAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "daoAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "VintageDaoCreated",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct SummonVintageDao.VintageCall[8]",
        name: "calls",
        type: "tuple[8]",
      },
    ],
    name: "multiVintageCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "daoName",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "daoFactoriesAddress",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "id",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "uint128",
                name: "flags",
                type: "uint128",
              },
            ],
            internalType: "struct DaoFactory.Adapter[]",
            name: "enalbeAdapters",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "id",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "uint128",
                name: "flags",
                type: "uint128",
              },
            ],
            internalType: "struct DaoFactory.Adapter[]",
            name: "adapters1",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "enable",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "cap",
                type: "uint256",
              },
            ],
            internalType: "struct SummonVintageDao.VintageParticipantCapInfo",
            name: "participantCap",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "enable",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "varifyType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "minAmount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "whiteList",
                type: "address[]",
              },
            ],
            internalType: "struct SummonVintageDao.VintageBackerMembership",
            name: "backerMembership",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "enable",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "varifyType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "minAmount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "whiteList",
                type: "address[]",
              },
            ],
            internalType: "struct SummonVintageDao.VintageRaiserMembership",
            name: "raiserMembership",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "eligibilityType",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenID",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "votingWeightedType",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "supportType",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "quorumType",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "support",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "quorum",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "votingPeriod",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executingPeriod",
                type: "uint256",
              },
            ],
            internalType: "struct SummonVintageDao.VintageVotingInfo",
            name: "votingInfo",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "genesisRaisers",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "allocations",
            type: "uint256[]",
          },
        ],
        internalType: "struct SummonVintageDao.VintageDaoParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "summonVintageDao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "daoFacAddr",
        type: "address",
      },
      {
        internalType: "string",
        name: "daoName",
        type: "string",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "summonVintageDao1",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vintageFundingPoolFacAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "summonVintageDao2",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "daoFacAddr",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "flags",
            type: "uint128",
          },
        ],
        internalType: "struct DaoFactory.Adapter[]",
        name: "enalbeAdapters",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
    ],
    name: "summonVintageDao3",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "daoFacAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "vintageFundingPoolFacAddr",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "flags",
            type: "uint128",
          },
        ],
        internalType: "struct DaoFactory.Adapter[]",
        name: "adapters1",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
    ],
    name: "summonVintageDao4",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "vintageDaoStewardMembershipEnable",
        type: "bool",
      },
      {
        internalType: "uint256[3]",
        name: "uint256Params",
        type: "uint256[3]",
      },
      {
        internalType: "address",
        name: "vintageDaoStewardMembershipTokenAddress",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "vintageDaoRaiserMembershipWhitelist",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
    ],
    name: "summonVintageDao5",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256[9]",
        name: "votingInfo",
        type: "uint256[9]",
      },
    ],
    name: "summonVintageDao6",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "eligibilityType",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "genesisRaisers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "allcationValues",
        type: "uint256[]",
      },
    ],
    name: "summonVintageDao7",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "enable",
        type: "bool",
      },
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "varifyType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "minHolding",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "vintageDaoInvestorMembershipWhitelist",
        type: "address[]",
      },
    ],
    name: "summonVintageDao8",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enable",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "cap",
        type: "uint256",
      },
    ],
    name: "summonVintageDao9",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506138a9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80635247f78e11610081578063ded2e7691161005b578063ded2e7691461017c578063e7528f591461018f578063fd00f123146101a257600080fd5b80635247f78e14610141578063aca5399314610154578063d78888f71461016957600080fd5b806317d0c640116100b257806317d0c640146101085780632c87c58f1461011b5780634a1ec9921461012e57600080fd5b80630d56658a146100ce57806312f58612146100f5575b600080fd5b6100e16100dc366004612bb2565b6101b5565b604051901515815260200160405180910390f35b6100e1610103366004612c67565b6106df565b6100e1610116366004612b37565b6107f5565b6100e1610129366004612c01565b61092e565b6100e161013c366004612aed565b6109c7565b6100e161014f366004612d2c565b610b70565b610167610162366004612db5565b610e1d565b005b6100e1610177366004612ef4565b610f4b565b61016761018a366004613055565b6113c0565b6100e161019d366004612f8f565b612046565b6100e16101b0366004612ca4565b61256f565b604051630da0f6c760e41b81527ff55ead1a20a1dd054d7b08c0efdba575e59f56a221996583f70c083bb98099b060048201528135602482015260009084906001600160a01b0382169063da0f6c7090604401600060405180830381600087803b15801561022257600080fd5b505af1158015610236573d6000803e3d6000fd5b5050604051631da7c90d60e11b81527f16d062a637d36196ce6a1b18288a49d8cd909a7ba54b6e33ca16514e7412124860048201526001600160a01b03878116602483015284169250633b4f921a9150604401600060405180830381600087803b1580156102a357600080fd5b505af11580156102b7573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527ff6242d1d39a1b19c05c52b0f7eb55673f7309c8d6b78dd23c2c38547583580486004820152602086013560248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b15801561032657600080fd5b505af115801561033a573d6000803e3d6000fd5b505060408051630da0f6c760e41b81527fb75eae231d9582c6afc6491273df4a0ffbccd48ab2c48dbce59e5d68f2d19dc460048201529086013560248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b1580156103a957600080fd5b505af11580156103bd573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527f561bc86bc227a0f760218574791a84f180f6f9f02be9519a1f99c14fce07a3106004820152606086013560248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b15801561042c57600080fd5b505af1158015610440573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527f8097540b5ab8a4c18e0b10cfbfd2c69e65e8da78f4f0485467006bafa39359646004820152608086013560248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b1580156104af57600080fd5b505af11580156104c3573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527f0324de13a5a6e302ddb95a9fdf81cc736fc8acee2abe558970daac27395904e7600482015260a086013560248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b15801561053257600080fd5b505af1158015610546573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527fb4c601c38beae7eebb719eda3438f59fcbfd4c6dd7d38c00665b6fd5b432df32600482015260c086013560248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b1580156105b557600080fd5b505af11580156105c9573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527f9876c0f0505bfb2b1c38d3bbd25ba13159172cd0868972d76927723f5a9480fc600482015260e086013560248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b15801561063857600080fd5b505af115801561064c573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527f02a3530cbb6e7c084516c86f68bd62c3e3fcd783c6c5d7e138616207f7a32250600482015261010086013560248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b1580156106bc57600080fd5b505af11580156106d0573d6000803e3d6000fd5b50600198975050505050505050565b600082156107eb57604051630da0f6c760e41b81527f0a71373d28d4b40b0bb46f8d58468f2e51292d10cf26715a0e3d8624b60c8a4260048201526001602482015284906001600160a01b0382169063da0f6c7090604401600060405180830381600087803b15801561075157600080fd5b505af1158015610765573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527faf0b46df030af159303b75690e740674df8434270d3b7248b0280f3d63a2dd8b6004820152602481018690526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b1580156107d157600080fd5b505af11580156107e5573d6000803e3d6000fd5b50505050505b5060019392505050565b60008130331461080457600080fd5b6040517f3146637e0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301528891889160009190831690633146637e9060240160206040518083038186803b15801561086657600080fd5b505afa15801561087a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089e9190612ad1565b6040517f29ca12ed0000000000000000000000000000000000000000000000000000000081529091506001600160a01b038416906329ca12ed906108ec90879085908d908d90600401613495565b600060405180830381600087803b15801561090657600080fd5b505af115801561091a573d6000803e3d6000fd5b5060019d9c50505050505050505050505050565b60008130331461093d57600080fd5b6040517f9bb2008400000000000000000000000000000000000000000000000000000000815286906001600160a01b03821690639bb20084906109889085908a908a906004016134cc565b600060405180830381600087803b1580156109a257600080fd5b505af11580156109b6573d6000803e3d6000fd5b5060019a9950505050505050505050565b60003033146109d557600080fd5b6040517f9ed933180000000000000000000000000000000000000000000000000000000081526001600160a01b038481166004830152859190821690639ed9331890602401600060405180830381600087803b158015610a3457600080fd5b505af1158015610a48573d6000803e3d6000fd5b50506040517f3146637e0000000000000000000000000000000000000000000000000000000081526001600160a01b0387811660048301526000935084169150633146637e9060240160206040518083038186803b158015610aa957600080fd5b505afa158015610abd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae19190612ad1565b6040517fc130c6390000000000000000000000000000000000000000000000000000000081527f161fca6912f107b0f13c9c7275de7391b32d2ea1c52ffba65a3c961880a0c60f60048201526001600160a01b0380831660248301528681166044830152919250869182169063c130c63990606401600060405180830381600087803b1580156109a257600080fd5b6040516317ba7d8560e01b81527f1fa6846b165d822fff79e37c67625706652fa9380c2aa49fd513ce534cc72ed46004820152600090879082906001600160a01b038316906317ba7d859060240160206040518083038186803b158015610bd657600080fd5b505afa158015610bea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0e9190612ad1565b90508760031415610cbc57610cbc8183846001600160a01b031663149acf9a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c5757600080fd5b505afa158015610c6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8f9190612ad1565b88886000818110610cb057634e487b7160e01b600052603260045260246000fd5b9050602002013561275e565b85156106d05760005b60ff8116871115610e0d57826001600160a01b031663dc929f4a89898460ff16818110610d0257634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610d179190612aae565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b158015610d7057600080fd5b505af1158015610d84573d6000803e3d6000fd5b505050508860031415610dfb57610dfb82848a8a8560ff16818110610db957634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610dce9190612aae565b8989610ddb87600161372c565b60ff16818110610cb057634e487b7160e01b600052603260045260246000fd5b80610e05816137e5565b915050610cc5565b5050600198975050505050505050565b60005b6008811015610f47576000828260088110610e4b57634e487b7160e01b600052603260045260246000fd5b6020020151516001600160a01b0316838360088110610e7a57634e487b7160e01b600052603260045260246000fd5b602002015160200151604051610e90919061318e565b6000604051808303816000865af19150503d8060008114610ecd576040519150601f19603f3d011682016040523d82523d6000602084013e610ed2565b606091505b5050905080610eec836002610ee79190613714565b6127e7565b604051602001610efc91906131aa565b60405160208183030381529060405290610f325760405162461bcd60e51b8152600401610f299190613539565b60405180910390fd5b50508080610f3f906137ac565b915050610e20565b5050565b600087303314610f5a57600080fd5b89156113b057604051630da0f6c760e41b81527f1405d0156cf64c805704fdf6691baebfcfa0d409ea827c231693ff0581b0b7776004820152600160248201526001600160a01b0382169063da0f6c7090604401600060405180830381600087803b158015610fc857600080fd5b505af1158015610fdc573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527f80140cd7e0b1d935bee578a67a41547c82987de8e7d6b3827d411b738110258b600482015260ff8b1660248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b15801561104a57600080fd5b505af115801561105e573d6000803e3d6000fd5b505050508760ff166000148061107757508760ff166001145b8061108557508760ff166002145b1561118c57604051630da0f6c760e41b81527f04ecaf460eb9f82aeb70035e3f24c18a3650fa0da9ddbe7e63d70de659b9b9016004820152602481018890526001600160a01b0382169063da0f6c7090604401600060405180830381600087803b1580156110f257600080fd5b505af1158015611106573d6000803e3d6000fd5b5050604051631da7c90d60e11b81527fe373ab56628c86db3f0e36774c2c5e0393f9272ff5c976bc3f0db2db60cdbc1460048201526001600160a01b03888116602483015284169250633b4f921a9150604401600060405180830381600087803b15801561117357600080fd5b505af1158015611187573d6000803e3d6000fd5b505050505b8760ff166002141561121957604051630da0f6c760e41b81527f6cb5bc3796b0717ca4ff665886c96fb0178d6341366eb7b6c737fe79083b836a6004820152602481018790526001600160a01b0382169063da0f6c7090604401600060405180830381600087803b15801561120057600080fd5b505af1158015611214573d6000803e3d6000fd5b505050505b8760ff16600314801561122b57508215155b156113b0576040516317ba7d8560e01b81527faaff643bdbd909f604d46ce015336f7e20fee3ac4a55cef3610188dee176c89260048201526000906001600160a01b038316906317ba7d859060240160206040518083038186803b15801561129257600080fd5b505afa1580156112a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ca9190612ad1565b905060005b60ff81168511156113ad57816001600160a01b031663ac7e7eba8488888560ff1681811061130d57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906113229190612aae565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381600087803b15801561138257600080fd5b505af1158015611396573d6000803e3d6000fd5b5050505080806113a5906137e5565b9150506112cf565b50505b5060019998505050505050505050565b6113c861293d565b6113d5604083018361356c565b60008181106113f457634e487b7160e01b600052603260045260246000fd5b90506020020160208101906114099190612aae565b61141383806135fb565b6114236040860160208701612aae565b6040516024016114369493929190613331565b60408051601f198184030181529181526020820180516001600160e01b03167ffd00f123000000000000000000000000000000000000000000000000000000001790528183525130916114889161318e565b6000604051808303816000865af19150503d80600081146114c5576040519150601f19603f3d011682016040523d82523d6000602084013e6114ca565b606091505b506101408301521515610120820181905261154d5760405162461bcd60e51b815260206004820152603360248201527f6c6f772d6c6576656c2063616c6c206f662066756e6374696f6e2073756d6d6f60448201527f6e56696e7461676544616f31206661696c6564000000000000000000000000006064820152608401610f29565b600061155983806135fb565b60405160240161156a9291906134f8565b60408051601f198184030181529181526020820180516001600160e01b03167f1d1f0a27000000000000000000000000000000000000000000000000000000001790529091506115bc9084018461356c565b60008181106115db57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906115f09190612aae565b6001600160a01b031681604051611607919061318e565b6000604051808303816000865af19150503d8060008114611644576040519150601f19603f3d011682016040523d82523d6000602084013e611649565b606091505b5061014084018190529015801561012085018190526020909201516001600160a01b031661016085015261168a57506101608201516001600160a01b031615155b61169357600080fd5b6116a0604084018461356c565b60018181106116bf57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906116d49190612aae565b6101608301516116ea6040860160208701612aae565b6040516001600160a01b0393841660248201529183166044830152909116606482015260840160408051601f19818403018152918152602080830180516001600160e01b03167f4a1ec992000000000000000000000000000000000000000000000000000000001790528401919091526117669084018461356c565b600081811061178557634e487b7160e01b600052603260045260246000fd5b905060200201602081019061179a9190612aae565b6117a760608501856135b4565b8461016001516040516024016117c094939291906132f9565b60408051601f198184030181529181526020820180516001600160e01b03167f2c87c58f00000000000000000000000000000000000000000000000000000000179052838101919091526118169084018461356c565b600081811061183557634e487b7160e01b600052603260045260246000fd5b905060200201602081019061184a9190612aae565b611857604085018561356c565b600181811061187657634e487b7160e01b600052603260045260246000fd5b905060200201602081019061188b9190612aae565b61189860808601866135b4565b8561016001516040516024016118b295949392919061323c565b60408051601f198184030181529181526020820180516001600160e01b03167f17d0c640000000000000000000000000000000000000000000000000000000001790526060808501929092528051918201905260009080611917610100870187613640565b61192890604081019060200161308e565b60ff16815260200161193e610100870187613640565b604001358152602001611955610100870187613640565b608001359052905061196b610100850185613640565b611979906020810190612eda565b81611988610100870187613640565b611999906080810190606001612aae565b6119a7610100880188613640565b6119b59060a081019061356c565b8761016001516040516024016119d09695949392919061342a565b60408051601f19818403018152918152602080830180516001600160e01b03167fe7528f5900000000000000000000000000000000000000000000000000000000179052608080870193909352815161012080820184528801358152610160808901803593830193909352610180890135938201939093526101a088013560608201526101c08801359381019390935261020087013560a08401526101e087013560c084015261022087013560e08401526102408701356101008401529085015190611aa0906101408801612aae565b82604051602401611ab39392919061327d565b60408051601f198184030181529190526020810180516001600160e01b03167f0d56658a0000000000000000000000000000000000000000000000000000000017905260a0850152610160840151610120860135611b1561026088018861356c565b611b236102808a018a61356c565b604051602401611b3896959493929190613355565b60408051601f198184030181529190526020810180516001600160e01b03167f5247f78e0000000000000000000000000000000000000000000000000000000017905260c0850152611b8d60e0860186613640565b611b9b906020810190612eda565b610160850151611bae60e0880188613640565b611bbf90604081019060200161308e565b611bcc60e0890189613640565b60400135611bdd60e08a018a613640565b60800135611bee60e08b018b613640565b611bff906080810190606001612aae565b611c0c60e08c018c613640565b611c1a9060a081019061356c565b604051602401611c319897969594939291906133d2565b60408051601f198184030181529190526020810180516001600160e01b03167fd78888f70000000000000000000000000000000000000000000000000000000017905260e0850152610160840151611c8f60c0870160a08801612eda565b604080516001600160a01b03939093166024840152901515604483015260c0878101356064808501919091528251808503909101815260849093018252602080840180516001600160e01b03167f12f58612000000000000000000000000000000000000000000000000000000001790526101008801938452825180840184523080825289830151828401526101808a01805192909252845180860186528181528a860151818501528251840152845180860186528181526060808c0151828601528351870191909152855180870187528281526080808d0151828701528451909201528551808701875282815260a0808d015182870152845190920152855180870187528281528b860151818601528351909101528451808601865281815260e0808c015182860152835190950152845180860190955284529351908301528251015251611ddd90610e1d565b60008461016001519050806001600160a01b0316630b1ca49a826001600160a01b03166348f7f2a36040518163ffffffff1660e01b815260040160206040518083038186803b158015611e2f57600080fd5b505afa158015611e43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e679190612ad1565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b158015611ec057600080fd5b505af1158015611ed4573d6000803e3d6000fd5b50505050806001600160a01b0316636503287f6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611f1357600080fd5b505af1158015611f27573d6000803e3d6000fd5b50506040516317ba7d8560e01b81527fd90e10040720d66c9412cb511e3dbb6ba51669248a7495e763d44ab426893efa6004820152600092506001600160a01b03841691506317ba7d859060240160206040518083038186803b158015611f8d57600080fd5b505afa158015611fa1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc59190612ad1565b6040517fd32b91dd0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301529192509082169063d32b91dd90602401600060405180830381600087803b15801561202557600080fd5b505af1158015612039573d6000803e3d6000fd5b5050505050505050505050565b60008130331461205557600080fd5b871561256157604051630da0f6c760e41b81527fcb1b85cff5456dffe0156522a7b50aa7e44ed692ccf353928d783aa10b41c2b66004820152600160248201526001600160a01b0382169063da0f6c7090604401600060405180830381600087803b1580156120c357600080fd5b505af11580156120d7573d6000803e3d6000fd5b50508851604051630da0f6c760e41b81527fc1b209168198eccc84193211efbd20aab87007db7285581e7b1e8ff3fe504fcd600482015260248101919091526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b15801561214657600080fd5b505af115801561215a573d6000803e3d6000fd5b505050508660006003811061217f57634e487b7160e01b600052603260045260246000fd5b60200201511580612191575086516001145b8061219d575086516002145b156122aa576020870151604051630da0f6c760e41b81527fcc90045e39ac105dcebbf952dd5296ea6b2d31393f3eb9ef0a0ab3458d85d10f600482015260248101919091526001600160a01b0382169063da0f6c7090604401600060405180830381600087803b15801561221057600080fd5b505af1158015612224573d6000803e3d6000fd5b5050604051631da7c90d60e11b81527f24ff71fc31a6b2be78a265ecbb78906acfd30d6b24357ca298e295b93087d9ea60048201526001600160a01b03898116602483015284169250633b4f921a9150604401600060405180830381600087803b15801561229157600080fd5b505af11580156122a5573d6000803e3d6000fd5b505050505b86516002141561233b576040808801519051630da0f6c760e41b81527fa2169a266a000b9ed910243e4e95f23d7d383448dfa96f2cfb3cd2ba907d6ed6600482015260248101919091526001600160a01b0382169063da0f6c7090604401600060405180830381600087803b15801561232257600080fd5b505af1158015612336573d6000803e3d6000fd5b505050505b8651600414156123cc576020870151604051630da0f6c760e41b81527f67bd12a003257b6f40dd27784916293c00a2b7414b0e8a8158c3aea267afcdfa600482015260248101919091526001600160a01b0382169063da0f6c7090604401600060405180830381600087803b1580156123b357600080fd5b505af11580156123c7573d6000803e3d6000fd5b505050505b865160031480156123dc57508315155b15612561576040516317ba7d8560e01b81527fd90e10040720d66c9412cb511e3dbb6ba51669248a7495e763d44ab426893efa60048201526000906001600160a01b038316906317ba7d859060240160206040518083038186803b15801561244357600080fd5b505afa158015612457573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061247b9190612ad1565b905060005b60ff811686111561255e57816001600160a01b0316632e0bf27f8489898560ff168181106124be57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906124d39190612aae565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381600087803b15801561253357600080fd5b505af1158015612547573d6000803e3d6000fd5b505050508080612556906137e5565b915050612480565b50505b506001979650505050505050565b600030331461257d57600080fd5b6040517f3baeff3f00000000000000000000000000000000000000000000000000000000815285906001600160a01b03821690633baeff3f906125c89088908890889060040161350c565b600060405180830381600087803b1580156125e257600080fd5b505af11580156125f6573d6000803e3d6000fd5b50506040517f1d1f0a27000000000000000000000000000000000000000000000000000000008152600092506001600160a01b0384169150631d1f0a279061264490899089906004016134f8565b60206040518083038186803b15801561265c57600080fd5b505afa158015612670573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126949190612ad1565b90506001600160a01b0381166127125760405162461bcd60e51b815260206004820152602f60248201527f53756d6d6d6f6e44616f3a3a73756d6d6f6e56696e7461676544616f3a3a637260448201527f656174652064616f206661696c656400000000000000000000000000000000006064820152608401610f29565b7fc97f13857137bdfa897b81b7697bbd055e5d99fc946c3a047235235c3bd87db087828888886040516127499594939291906132cd565b60405180910390a15060019695505050505050565b6040517f5f15b1d90000000000000000000000000000000000000000000000000000000081526001600160a01b038481166004830152838116602483015260448201839052851690635f15b1d990606401600060405180830381600087803b1580156127c957600080fd5b505af11580156127dd573d6000803e3d6000fd5b5050505050505050565b60608161282757505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115612851578061283b816137ac565b915061284a9050600a83613751565b915061282b565b60008167ffffffffffffffff81111561287a57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156128a4576020820181803683370190505b5090505b8415612935576128b9600183613765565b91506128c6600a86613805565b6128d1906030613714565b60f81b8183815181106128f457634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061292e600a86613751565b94506128a8565b949350505050565b604051806101a001604052806060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016000151581526020016060815260200160006001600160a01b031681526020016129b06129b5565b905290565b6040518061010001604052806008905b6040805180820190915260008152606060208201528152602001906001900390816129c55790505090565b80356129fb8161385b565b919050565b60008083601f840112612a11578182fd5b50813567ffffffffffffffff811115612a28578182fd5b6020830191508360208260051b8501011115612a4357600080fd5b9250929050565b60008083601f840112612a5b578182fd5b50813567ffffffffffffffff811115612a72578182fd5b602083019150836020606083028501011115612a4357600080fd5b803580151581146129fb57600080fd5b803560ff811681146129fb57600080fd5b600060208284031215612abf578081fd5b8135612aca8161385b565b9392505050565b600060208284031215612ae2578081fd5b8151612aca8161385b565b600080600060608486031215612b01578182fd5b8335612b0c8161385b565b92506020840135612b1c8161385b565b91506040840135612b2c8161385b565b809150509250925092565b600080600080600060808688031215612b4e578081fd5b8535612b598161385b565b94506020860135612b698161385b565b9350604086013567ffffffffffffffff811115612b84578182fd5b612b9088828901612a4a565b9094509250506060860135612ba48161385b565b809150509295509295909350565b6000806000610160808587031215612bc8578384fd5b8435612bd38161385b565b93506020850135612be38161385b565b9250848101861015612bf3578182fd5b506040840190509250925092565b60008060008060608587031215612c16578182fd5b8435612c218161385b565b9350602085013567ffffffffffffffff811115612c3c578283fd5b612c4887828801612a4a565b9094509250506040850135612c5c8161385b565b939692955090935050565b600080600060608486031215612c7b578081fd5b8335612c868161385b565b9250612c9460208501612a8d565b9150604084013590509250925092565b60008060008060608587031215612cb9578182fd5b8435612cc48161385b565b9350602085013567ffffffffffffffff80821115612ce0578384fd5b818701915087601f830112612cf3578384fd5b813581811115612d01578485fd5b886020828501011115612d12578485fd5b6020830195508094505050506040850135612c5c8161385b565b60008060008060008060808789031215612d44578384fd5b8635612d4f8161385b565b955060208701359450604087013567ffffffffffffffff80821115612d72578586fd5b612d7e8a838b01612a00565b90965094506060890135915080821115612d96578283fd5b50612da389828a01612a00565b979a9699509497509295939492505050565b60006020808385031215612dc7578182fd5b823567ffffffffffffffff80821115612dde578384fd5b8185019150601f8681840112612df2578485fd5b612dfa61369c565b80848961010087011115612e0c578788fd5b875b6008811015612ecb57813586811115612e2557898afd5b87016040818d031215612e3657898afd5b612e3e613673565b8135612e498161385b565b8152818a013588811115612e5b578b8cfd5b8083019250508c87830112612e6e578a8bfd5b813588811115612e8057612e80613845565b612e918b601f198a840116016136e3565b8181528e8c838601011115612ea4578c8dfd5b818c85018d8301379081018b018c9052818b01528552509287019290870190600101612e0e565b50909998505050505050505050565b600060208284031215612eeb578081fd5b612aca82612a8d565b60008060008060008060008060e0898b031215612f0f578586fd5b612f1889612a8d565b97506020890135612f288161385b565b9650612f3660408a01612a9d565b9550606089013594506080890135935060a0890135612f548161385b565b925060c089013567ffffffffffffffff811115612f6f578283fd5b612f7b8b828c01612a00565b999c989b5096995094979396929594505050565b60008060008060008060e08789031215612fa7578384fd5b612fb087612a8d565b9550602088603f890112612fc2578485fd5b612fca6136c0565b80828a0160808b018c811115612fde578889fd5b885b6003811015612ffd57823585529385019391850191600101612fe0565b5082995061300a816129f0565b9850505050505060a087013567ffffffffffffffff81111561302a578283fd5b61303689828a01612a00565b9094509250613049905060c088016129f0565b90509295509295509295565b600060208284031215613066578081fd5b813567ffffffffffffffff81111561307c578182fd5b82016102a08185031215612aca578182fd5b60006020828403121561309f578081fd5b612aca82612a9d565b81835260006020808501945082825b858110156130e55781356130ca8161385b565b6001600160a01b0316875295820195908201906001016130b7565b509495945050505050565b81835260006020808501945082825b858110156130e55781358752828201356131188161385b565b6001600160a01b0316878401526040828101356fffffffffffffffffffffffffffffffff8116808214613149578687fd5b918901919091525060609687019691909101906001016130ff565b8183528181602085013750600080602083850101526020601f19601f840116840101905092915050565b600082516131a081846020870161377c565b9190910192915050565b7f6c6f772d6c6576656c2063616c6c206f662073756d6d6f6e56696e746167654481527f616f00000000000000000000000000000000000000000000000000000000000060208201526000825161320881602285016020870161377c565b7f206661696c6564000000000000000000000000000000000000000000000000006022939091019283015250602901919050565b60006001600160a01b0380881683528087166020840152608060408401526132686080840186886130f0565b91508084166060840152509695505050505050565b6001600160a01b038481168252831660208083019190915261016082019060408301908460005b60098110156132c1578151845292820192908201906001016132a4565b50505050949350505050565b60006001600160a01b038088168352808716602084015260806040840152613268608084018688613164565b60006001600160a01b0380871683526060602084015261331d6060840186886130f0565b915080841660408401525095945050505050565b60006001600160a01b0380871683526060602084015261331d606084018688613164565b6001600160a01b038716815285602082015260806040820152600061337e6080830186886130a8565b82810360608401528381527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8411156133b5578182fd5b8360051b8086602084013701602001908152979650505050505050565b881515815260006001600160a01b03808a16602084015260ff8916604084015287606084015286608084015280861660a08401525060e060c083015261341c60e0830184866130a8565b9a9950505050505050505050565b86151581526000602080830188835b600381101561345657815183529183019190830190600101613439565b505050506001600160a01b03808716608084015260e060a084015261347f60e0840186886130a8565b915080841660c084015250979650505050505050565b60006001600160a01b038087168352808616602084015250606060408301526134c26060830184866130f0565b9695505050505050565b6001600160a01b03841681526040602082015260006134ef6040830184866130f0565b95945050505050565b602081526000612935602083018486613164565b604081526000613520604083018587613164565b90506001600160a01b0383166020830152949350505050565b602081526000825180602084015261355881604085016020870161377c565b601f01601f19169190910160400192915050565b6000808335601e19843603018112613582578283fd5b83018035915067ffffffffffffffff82111561359c578283fd5b6020019150600581901b3603821315612a4357600080fd5b6000808335601e198436030181126135ca578283fd5b83018035915067ffffffffffffffff8211156135e4578283fd5b6020019150606081023603821315612a4357600080fd5b6000808335601e19843603018112613611578283fd5b83018035915067ffffffffffffffff82111561362b578283fd5b602001915036819003821315612a4357600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff418336030181126131a0578182fd5b6040805190810167ffffffffffffffff8111828210171561369657613696613845565b60405290565b604051610100810167ffffffffffffffff8111828210171561369657613696613845565b6040516060810167ffffffffffffffff8111828210171561369657613696613845565b604051601f8201601f1916810167ffffffffffffffff8111828210171561370c5761370c613845565b604052919050565b6000821982111561372757613727613819565b500190565b600060ff821660ff84168060ff0382111561374957613749613819565b019392505050565b6000826137605761376061382f565b500490565b60008282101561377757613777613819565b500390565b60005b8381101561379757818101518382015260200161377f565b838111156137a6576000848401525b50505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156137de576137de613819565b5060010190565b600060ff821660ff8114156137fc576137fc613819565b60010192915050565b6000826138145761381461382f565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461387057600080fd5b5056fea264697066735822122031653ec0dfb5b6cdcb5cd1f1957f6c4ba6b9daa3976c82ecfb234e9722993b1964736f6c63430008040033";

type SummonVintageDaoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SummonVintageDaoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SummonVintageDao__factory extends ContractFactory {
  constructor(...args: SummonVintageDaoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SummonVintageDao> {
    return super.deploy(overrides || {}) as Promise<SummonVintageDao>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SummonVintageDao {
    return super.attach(address) as SummonVintageDao;
  }
  override connect(signer: Signer): SummonVintageDao__factory {
    return super.connect(signer) as SummonVintageDao__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SummonVintageDaoInterface {
    return new utils.Interface(_abi) as SummonVintageDaoInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SummonVintageDao {
    return new Contract(address, _abi, signerOrProvider) as SummonVintageDao;
  }
}
