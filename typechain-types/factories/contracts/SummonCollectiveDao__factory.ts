/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SummonCollectiveDao,
  SummonCollectiveDaoInterface,
} from "../../contracts/SummonCollectiveDao";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "daoFactoryAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "daoAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "CollectiveDaoCreated",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct SummonCollectiveDao.Call[8]",
        name: "calls",
        type: "tuple[8]",
      },
    ],
    name: "multiCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "daoFactoriesAddress",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "id",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "uint128",
                name: "flags",
                type: "uint128",
              },
            ],
            internalType: "struct DaoFactory.Adapter[]",
            name: "enalbeAdapters",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "id",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "uint128",
                name: "flags",
                type: "uint128",
              },
            ],
            internalType: "struct DaoFactory.Adapter[]",
            name: "adapters1",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "enable",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "capacity",
                type: "uint256",
              },
            ],
            internalType: "struct SummonCollectiveDao.InvestorCapacity",
            name: "investorCapacity",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "enable",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "varifyType",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minHolding",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "whiteList",
                type: "address[]",
              },
            ],
            internalType:
              "struct SummonCollectiveDao.CollectiveGovernorMembershipInfo",
            name: "governorMembership",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "votingAssetType",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "votingPower",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "support",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "quorum",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "supportType",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "quorumType",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "votingPeriod",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "gracePeriod",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executePeriod",
                type: "uint256",
              },
            ],
            internalType: "struct SummonCollectiveDao.CollectiveDaoVotingInfo",
            name: "collectiveDaoVotingInfo",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "creator",
                type: "address",
              },
              {
                internalType: "address",
                name: "currency",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "redemptionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "proposerInvestTokenReward",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "proposerPaybackTokenReward",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "riceRewardReceiver",
                type: "address",
              },
            ],
            internalType: "struct SummonCollectiveDao.CollectiveDaoInfo",
            name: "collectiveDaoInfo",
            type: "tuple",
          },
        ],
        internalType: "struct SummonCollectiveDao.CollectiveDaoParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "summonCollectiveDao",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "daoFacAddr",
        type: "address",
      },
      {
        internalType: "string",
        name: "daoName",
        type: "string",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "summonCollectiveDao1",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
    ],
    name: "summonCollectiveDao10",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collectiveFundingPoolFacAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "summonCollectiveDao2",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "daoFacAddr",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "flags",
            type: "uint128",
          },
        ],
        internalType: "struct DaoFactory.Adapter[]",
        name: "enalbeAdapters",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
    ],
    name: "summonCollectiveDao3",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "daoFacAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "collectiveFundingPoolFacAddr",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint128",
            name: "flags",
            type: "uint128",
          },
        ],
        internalType: "struct DaoFactory.Adapter[]",
        name: "adapters1",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
    ],
    name: "summonCollectiveDao4",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "votingPower",
        type: "uint8",
      },
      {
        internalType: "uint256[8]",
        name: "_uint256VoteArgs",
        type: "uint256[8]",
      },
    ],
    name: "summonCollectiveDao5",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "redemptFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "currencyAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "proposerInvestTokenReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "proposerPaybackTokenReward",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "riceRewardReceiver",
        type: "address",
      },
    ],
    name: "summonCollectiveDao6",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enable",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "investorCap",
        type: "uint256",
      },
    ],
    name: "summonCollectiveDao7",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newDaoAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "vType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "miniHolding",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "enable",
        type: "bool",
      },
      {
        internalType: "address",
        name: "collectiveDaoGovernorMembershipTokenAddress",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "collectiveDaoGovernorMembershipWhitelist",
        type: "address[]",
      },
    ],
    name: "summonCollectiveDao8",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50613162806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063b05e4fed11610081578063e16b56d11161005b578063e16b56d11461017a578063e5f3ddc21461018d578063fddc0de4146101a257600080fd5b8063b05e4fed14610141578063b1d68be514610154578063c87a10011461016757600080fd5b80636410d630116100b25780636410d6301461010857806373d446171461011b578063a1ab6a001461012e57600080fd5b8063093eccfd146100ce5780635c7493c2146100f5575b600080fd5b6100e16100dc3660046126dd565b6101b5565b604051901515815260200160405180910390f35b6100e16101033660046127cb565b6103a9565b6100e1610116366004612575565b610826565b6100e16101293660046125bf565b6109f4565b6100e161013c366004612536565b610b32565b6100e161014f366004612765565b610db1565b6100e161016236600461288e565b611050565b6100e1610175366004612a1a565b611502565b6100e161018836600461263a565b612006565b6101a061019b3660046128db565b6120a5565b005b6100e16101b03660046126a0565b6121ca565b60003033146101c357600080fd5b6040517f3baeff3f00000000000000000000000000000000000000000000000000000000815285906001600160a01b03821690633baeff3f9061020e90889088908890600401612dda565b600060405180830381600087803b15801561022857600080fd5b505af115801561023c573d6000803e3d6000fd5b50506040517f1d1f0a27000000000000000000000000000000000000000000000000000000008152600092506001600160a01b0384169150631d1f0a279061028a9089908990600401612dc6565b60206040518083038186803b1580156102a257600080fd5b505afa1580156102b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102da9190612559565b90506001600160a01b03811661035d5760405162461bcd60e51b815260206004820152603260248201527f53756d6d6d6f6e44616f3a3a73756d6d6f6e436f6c6c65637469766544616f3a60448201527f3a6372656174652064616f206661696c6564000000000000000000000000000060648201526084015b60405180910390fd5b7f6332f1f75eccdb513e45b8bfa0da1aa82a9f67cb34eb5f744ad6adc527cd42be8782888888604051610394959493929190612c05565b60405180910390a15060019695505050505050565b6000883033146103b857600080fd5b851561081657604051630da0f6c760e41b81527f02049446ffbff09ad55d6fdb03c8c6027cf548332d30663e8fdf960abdab86ea6004820152600160248201526001600160a01b0382169063da0f6c7090604401600060405180830381600087803b15801561042657600080fd5b505af115801561043a573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527f09f0ac4191623c4a1e481e66bb865f218d9f5bcef4e65b597583a054b10182bc6004820152602481018c90526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b1580156104a657600080fd5b505af11580156104ba573d6000803e3d6000fd5b5050505088600014806104cd5750886001145b806104d85750886002145b156105df57604051630da0f6c760e41b81527f6bdd30ca7a0b5a78cdfd780fd2f234880048cafa893e9ccbc9f82df25cdc717f6004820152602481018990526001600160a01b0382169063da0f6c7090604401600060405180830381600087803b15801561054557600080fd5b505af1158015610559573d6000803e3d6000fd5b5050604051631da7c90d60e11b81527f0567bf43e78d815625031c35adddd5d701cb6b913fbad3b625b4f8c00fdc42aa60048201526001600160a01b03888116602483015284169250633b4f921a9150604401600060405180830381600087803b1580156105c657600080fd5b505af11580156105da573d6000803e3d6000fd5b505050505b886002141561066957604051630da0f6c760e41b81527f032de4639c5a8edd1ea478b1345b2d031f42ecd2b29442d3080c9ac0545b5f8e6004820152602481018890526001600160a01b0382169063da0f6c7090604401600060405180830381600087803b15801561065057600080fd5b505af1158015610664573d6000803e3d6000fd5b505050505b88600314801561067857508215155b15610816576040517f17ba7d850000000000000000000000000000000000000000000000000000000081527f1a4f1390baec30049008138e650571a3c4374eba88116bc89dc192f2f9295efe60048201526000906001600160a01b038316906317ba7d859060240160206040518083038186803b1580156106f857600080fd5b505afa15801561070c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107309190612559565b905060005b60ff811685111561081357816001600160a01b03166333f7bc0c8488888560ff1681811061077357634e487b7160e01b600052603260045260246000fd5b90506020020160208101906107889190612536565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381600087803b1580156107e857600080fd5b505af11580156107fc573d6000803e3d6000fd5b50505050808061080b9061309e565b915050610735565b50505b5060019998505050505050505050565b600030331461083457600080fd5b6040517f9ed933180000000000000000000000000000000000000000000000000000000081526001600160a01b038481166004830152859190821690639ed9331890602401600060405180830381600087803b15801561089357600080fd5b505af11580156108a7573d6000803e3d6000fd5b50506040517f3146637e0000000000000000000000000000000000000000000000000000000081526001600160a01b0387811660048301526000935084169150633146637e9060240160206040518083038186803b15801561090857600080fd5b505afa15801561091c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109409190612559565b6040517fc130c6390000000000000000000000000000000000000000000000000000000081527f3909e87234f428ccb8748126e2c93f66a62f92a70d315fa5803dec6362be07ab60048201526001600160a01b0380831660248301528681166044830152919250869182169063c130c63990606401600060405180830381600087803b1580156109cf57600080fd5b505af11580156109e3573d6000803e3d6000fd5b5060019a9950505050505050505050565b600081303314610a0357600080fd5b6040517f3146637e0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301528891889160009190831690633146637e9060240160206040518083038186803b158015610a6557600080fd5b505afa158015610a79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9d9190612559565b90508615610816576040517f29ca12ed0000000000000000000000000000000000000000000000000000000081526001600160a01b038416906329ca12ed90610af090879085908d908d90600401612d63565b600060405180830381600087803b158015610b0a57600080fd5b505af1158015610b1e573d6000803e3d6000fd5b505050505060019998505050505050505050565b600080829050806001600160a01b0316630b1ca49a826001600160a01b03166348f7f2a36040518163ffffffff1660e01b815260040160206040518083038186803b158015610b8057600080fd5b505afa158015610b94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb89190612559565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b158015610c1157600080fd5b505af1158015610c25573d6000803e3d6000fd5b50506040517f17ba7d850000000000000000000000000000000000000000000000000000000081527f1a4f1390baec30049008138e650571a3c4374eba88116bc89dc192f2f9295efe6004820152600092506001600160a01b03841691506317ba7d859060240160206040518083038186803b158015610ca457600080fd5b505afa158015610cb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdc9190612559565b6040517fd32b91dd0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301529192509082169063d32b91dd90602401600060405180830381600087803b158015610d3c57600080fd5b505af1158015610d50573d6000803e3d6000fd5b50505050816001600160a01b0316636503287f6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610d8f57600080fd5b505af1158015610da3573d6000803e3d6000fd5b506001979650505050505050565b600086303314610dc057600080fd5b604051630da0f6c760e41b81527f51cc27e85946200c558b984a0c15cad2122655d647f9c02ebe9529f2a0b25a2f6004820152602481018890526001600160a01b0382169063da0f6c7090604401600060405180830381600087803b158015610e2857600080fd5b505af1158015610e3c573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527fb035c58a9b643066fc5cd78a708da0456c36221a03ca174ff3b76d4306ff7c6c6004820152602481018890526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b158015610ea857600080fd5b505af1158015610ebc573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527f558062fa5fcc8623e6c743ab5b51793317989a5a93f03b32a485f94843f77da36004820152602481018790526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b158015610f2857600080fd5b505af1158015610f3c573d6000803e3d6000fd5b5050604051631da7c90d60e11b81527f7fa36390a0e9b8b8004035572fd8345b1128cea12d1763a1baf8fbd4fb7b202760048201526001600160a01b03898116602483015284169250633b4f921a9150604401600060405180830381600087803b158015610fa957600080fd5b505af1158015610fbd573d6000803e3d6000fd5b5050604051631da7c90d60e11b81527fc77068975ba2254bd67080aa196783f213ee682a15d902d03f33782130cf737d60048201526001600160a01b03868116602483015284169250633b4f921a9150604401600060405180830381600087803b15801561102a57600080fd5b505af115801561103e573d6000803e3d6000fd5b5060019b9a5050505050505050505050565b60008330331461105f57600080fd5b604051630da0f6c760e41b81527f9876c0f0505bfb2b1c38d3bbd25ba13159172cd0868972d76927723f5a9480fc6004820152833560248201526001600160a01b0382169063da0f6c7090604401600060405180830381600087803b1580156110c757600080fd5b505af11580156110db573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527fb4c601c38beae7eebb719eda3438f59fcbfd4c6dd7d38c00665b6fd5b432df326004820152602086013560248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b15801561114a57600080fd5b505af115801561115e573d6000803e3d6000fd5b505060408051630da0f6c760e41b81527feee23dc9ab95b6666db01c2b6cae6a5ef706099a25926e21e0a2e043fe88560460048201529086013560248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b1580156111cd57600080fd5b505af11580156111e1573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527fd093d4a34a12a221b19c0a6689d5449f1346aa769d15cca4e9782c36fda9339a600482015260ff871660248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b15801561124f57600080fd5b505af1158015611263573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527f0324de13a5a6e302ddb95a9fdf81cc736fc8acee2abe558970daac27395904e76004820152606086013560248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b1580156112d257600080fd5b505af11580156112e6573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527f1aeed2c0ea31fb81f41489b79a1d09374a270e0f9340ace7354cce77586a7d166004820152608086013560248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b15801561135557600080fd5b505af1158015611369573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527f0e0434138ea29dceb1f2c0ca9b9f923f9d1c32d3d96bab2de9991f140daca712600482015260a086013560248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b1580156113d857600080fd5b505af11580156113ec573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527fb646599143db51c9136a4861a55f7140eab851836e3e1a42ba7804f5356a3655600482015260c086013560248201526001600160a01b038416925063da0f6c709150604401600060405180830381600087803b15801561145b57600080fd5b505af115801561146f573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527fada09015efb4d45310950167ce9728fe9635e3ef65b062ab8afb0ff348d76cad600482015260e086013560248201526001600160a01b038416925063da0f6c7091506044015b600060405180830381600087803b1580156114df57600080fd5b505af11580156114f3573d6000803e3d6000fd5b50600198975050505050505050565b600081816115146101e0830183612f0e565b611525906060810190604001612536565b6001600160a01b0316141580156115545750670de0b6b3a764000061154e6101e0830183612f0e565b60600135105b80156115785750670de0b6b3a76400006115726101e0830183612f0e565b60800135105b801561159c5750670de0b6b3a76400006115966101e0830183612f0e565b60a00135105b61160e5760405162461bcd60e51b815260206004820152602e60248201527f53756d6d6f6e20466c65782044414f3a3a496e76616c6964204d616e6167656d60448201527f656e742046656520416d6f756e740000000000000000000000000000000000006064820152608401610354565b611616612413565b6116208480612e3a565b600081811061163f57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906116549190612536565b6116626101e0860186612f0e565b61166c9080612ec9565b61167a6101e0880188612f0e565b61168b906040810190602001612536565b60405160240161169e9493929190612c69565b60408051601f198184030181529181526020820180516001600160e01b03167f093eccfd000000000000000000000000000000000000000000000000000000001790528183525130916116f091612b16565b6000604051808303816000865af19150503d806000811461172d576040519150601f19603f3d011682016040523d82523d6000602084013e611732565b606091505b50610140830152151561012082018190526117b55760405162461bcd60e51b815260206004820152603660248201527f6c6f772d6c6576656c2063616c6c206f662066756e6374696f6e2073756d6d6f60448201527f6e436f6c6c65637469766544616f31206661696c6564000000000000000000006064820152608401610354565b60006117c56101e0860186612f0e565b6117cf9080612ec9565b6040516024016117e0929190612dc6565b60408051601f198184030181529190526020810180516001600160e01b03167f1d1f0a2700000000000000000000000000000000000000000000000000000000179052905061182f8580612e3a565b600081811061184e57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906118639190612536565b6001600160a01b03168160405161187a9190612b16565b6000604051808303816000865af19150503d80600081146118b7576040519150601f19603f3d011682016040523d82523d6000602084013e6118bc565b606091505b5061014084018190529015801561012085018190526020909201516001600160a01b03166101608501526118fd57506101608201516001600160a01b031615155b61190657600080fd5b6119108580612e3a565b600181811061192f57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906119449190612536565b6101608301516119586101e0880188612f0e565b611969906040810190602001612536565b6040516001600160a01b0393841660248201529183166044830152909116606482015260840160408051601f19818403018152919052602080820180516001600160e01b03167f6410d630000000000000000000000000000000000000000000000000000000001790528301526119e08580612e3a565b60008181106119ff57634e487b7160e01b600052603260045260246000fd5b9050602002016020810190611a149190612536565b611a216020870187612e82565b846101600151604051602401611a3a9493929190612c31565b60408051601f198184030181529181526020820180516001600160e01b03167fe16b56d100000000000000000000000000000000000000000000000000000000179052830152611a8a8580612e3a565b6000818110611aa957634e487b7160e01b600052603260045260246000fd5b9050602002016020810190611abe9190612536565b611ac88680612e3a565b6001818110611ae757634e487b7160e01b600052603260045260246000fd5b9050602002016020810190611afc9190612536565b611b096040880188612e82565b856101600151604051602401611b23959493929190612bc4565b60408051601f19818403018152918152602080830180516001600160e01b03167f73d4461700000000000000000000000000000000000000000000000000000000179052606080860193909352815161010080820184526101808a01358252890180359282019290925260c0808a0135938201939093526101208901359381019390935261014088013560808401526101608089013560a08501526101a0890135928401929092526101c088013560e0808501919091529185015191611beb91908901612a53565b82604051602401611bfe93929190612d13565b60408051601f198184030181529190526020810180516001600160e01b03167fb1d68be5000000000000000000000000000000000000000000000000000000001790526080840152610160830151611c5a6101e0880188612f0e565b60600135611c6c6101e0890189612f0e565b611c7d906060810190604001612536565b611c8b6101e08a018a612f0e565b60800135611c9d6101e08b018b612f0e565b60a00135611caf6101e08c018c612f0e565b611cc09060e081019060c001612536565b6040516001600160a01b03968716602482015260448101959095529285166064850152608484019190915260a483015290911660c482015260e40160408051601f198184030181529190526020810180516001600160e01b03167fb05e4fed0000000000000000000000000000000000000000000000000000000017905260a0840152610160830151611d596080880160608901612a00565b6040516001600160a01b039092166024830152151560448201526080870135606482015260840160408051601f198184030181529190526020810180516001600160e01b03167ffddc0de40000000000000000000000000000000000000000000000000000000017905260c0840152610160830151611ddb60a0880188612f41565b60200135611dec60a0890189612f41565b60400135611dfd60a08a018a612f41565b60800135611e0e60a08b018b612f41565b611e1c906020810190612a00565b611e2960a08c018c612f41565b611e3a906080810190606001612536565b611e4760a08d018d612f41565b611e559060a0810190612e3a565b604051602401611e6c989796959493929190612c8d565b60408051808303601f19018152918152602080830180517f5c7493c2000000000000000000000000000000000000000000000000000000006001600160e01b039182161790915260e0870193845261016087015183516001600160a01b03909116602480830191909152845180830390910181526044909101845280830180519092167fa1ab6a00000000000000000000000000000000000000000000000000000000001790915261010087019081528251808401845230808252888401518285015261018089018051929092528451808601865281815289860151818601528251850152845180860186528181526060808b0151828701528351870191909152855180870187528281526080808c0151828801528451909201528551808701875282815260a0808c0151828801528451909201528551808701875282815260c0808c015182880152845190920152855180870187528281529651878601528251019590955283518085019094529383525190820152905160076020020152610180830151611ffa906120a5565b50600195945050505050565b60008130331461201557600080fd5b858415612098576040517f9bb200840000000000000000000000000000000000000000000000000000000081526001600160a01b03821690639bb20084906120659085908a908a90600401612d9a565b600060405180830381600087803b15801561207f57600080fd5b505af1158015612093573d6000803e3d6000fd5b505050505b5060019695505050505050565b60005b60088110156121c65760008282600881106120d357634e487b7160e01b600052603260045260246000fd5b6020020151516001600160a01b031683836008811061210257634e487b7160e01b600052603260045260246000fd5b6020020151602001516040516121189190612b16565b6000604051808303816000865af19150503d8060008114612155576040519150601f19603f3d011682016040523d82523d6000602084013e61215a565b606091505b505090508061217483600261216f9190612ff2565b6122bd565b6040516020016121849190612b32565b604051602081830303815290604052906121b15760405162461bcd60e51b81526004016103549190612e07565b505080806121be90613065565b9150506120a8565b5050565b6000833033146121d957600080fd5b83156122b257604051630da0f6c760e41b81527f69f4ffb3ebcb7809550bddd3e4d449a47e737bf6635bc7a730996643997b0e486004820152600160248201526001600160a01b0382169063da0f6c7090604401600060405180830381600087803b15801561224757600080fd5b505af115801561225b573d6000803e3d6000fd5b5050604051630da0f6c760e41b81527fecbde689cc6337d29a750b8b8a8abbfa97427b4ac800ab55be2f2c87311510f26004820152602481018690526001600160a01b038416925063da0f6c7091506044016114c5565b506001949350505050565b6060816122fd57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115612327578061231181613065565b91506123209050600a8361300a565b9150612301565b60008167ffffffffffffffff81111561235057634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561237a576020820181803683370190505b5090505b841561240b5761238f60018361301e565b915061239c600a866130be565b6123a7906030612ff2565b60f81b8183815181106123ca57634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612404600a8661300a565b945061237e565b949350505050565b604051806101a001604052806060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016000151581526020016060815260200160006001600160a01b0316815260200161248661248b565b905290565b6040518061010001604052806008905b60408051808201909152600081526060602082015281526020019060019003908161249b5790505090565b60008083601f8401126124d7578182fd5b50813567ffffffffffffffff8111156124ee578182fd5b60208301915083602060608302850101111561250957600080fd5b9250929050565b8035801515811461252057600080fd5b919050565b803560ff8116811461252057600080fd5b600060208284031215612547578081fd5b813561255281613114565b9392505050565b60006020828403121561256a578081fd5b815161255281613114565b600080600060608486031215612589578182fd5b833561259481613114565b925060208401356125a481613114565b915060408401356125b481613114565b809150509250925092565b6000806000806000608086880312156125d6578081fd5b85356125e181613114565b945060208601356125f181613114565b9350604086013567ffffffffffffffff81111561260c578182fd5b612618888289016124c6565b909450925050606086013561262c81613114565b809150509295509295909350565b6000806000806060858703121561264f578384fd5b843561265a81613114565b9350602085013567ffffffffffffffff811115612675578384fd5b612681878288016124c6565b909450925050604085013561269581613114565b939692955090935050565b6000806000606084860312156126b4578283fd5b83356126bf81613114565b92506126cd60208501612510565b9150604084013590509250925092565b600080600080606085870312156126f2578384fd5b84356126fd81613114565b9350602085013567ffffffffffffffff80821115612719578485fd5b818701915087601f83011261272c578485fd5b81358181111561273a578586fd5b88602082850101111561274b578586fd5b602083019550809450505050604085013561269581613114565b60008060008060008060c0878903121561277d578384fd5b863561278881613114565b955060208701359450604087013561279f81613114565b9350606087013592506080870135915060a08701356127bd81613114565b809150509295509295509295565b60008060008060008060008060e0898b0312156127e6578586fd5b88356127f181613114565b975060208901359650604089013595506060890135945061281460808a01612510565b935060a089013561282481613114565b925060c089013567ffffffffffffffff80821115612840578384fd5b818b0191508b601f830112612853578384fd5b813581811115612861578485fd5b8c60208260051b8501011115612875578485fd5b6020830194508093505050509295985092959890939650565b60008060006101408085870312156128a4578182fd5b84356128af81613114565b93506128bd60208601612525565b92508581860111156128cd578182fd5b506040840190509250925092565b600060208083850312156128ed578182fd5b823567ffffffffffffffff80821115612904578384fd5b8185019150601f8681840112612918578485fd5b612920612f74565b80848961010087011115612932578788fd5b875b60088110156129f15781358681111561294b57898afd5b87016040818d03121561295c57898afd5b612964612f9e565b813561296f81613114565b8152818a013588811115612981578b8cfd5b8083019250508c87830112612994578a8bfd5b8135888111156129a6576129a66130fe565b6129b78b601f198a84011601612fc1565b8181528e8c8386010111156129ca578c8dfd5b818c85018d8301379081018b018c9052818b01528552509287019290870190600101612934565b50909998505050505050505050565b600060208284031215612a11578081fd5b61255282612510565b600060208284031215612a2b578081fd5b813567ffffffffffffffff811115612a41578182fd5b82016102008185031215612552578182fd5b600060208284031215612a64578081fd5b61255282612525565b81835260006020808501945082825b85811015612ae1578135875282820135612a9581613114565b6001600160a01b0316878401526040828101356fffffffffffffffffffffffffffffffff8116808214612ac6578687fd5b91890191909152506060968701969190910190600101612a7c565b509495945050505050565b8183528181602085013750600080602083850101526020601f19601f840116840101905092915050565b60008251612b28818460208701613035565b9190910192915050565b7f6c6f772d6c6576656c2063616c6c206f662073756d6d6f6e436f6c6c6563746981527f766544616f000000000000000000000000000000000000000000000000000000602082015260008251612b90816025850160208701613035565b7f206661696c6564000000000000000000000000000000000000000000000000006025939091019283015250602c01919050565b60006001600160a01b038088168352808716602084015260806040840152612bf0608084018688612a6d565b91508084166060840152509695505050505050565b60006001600160a01b038088168352808716602084015260806040840152612bf0608084018688612aec565b60006001600160a01b03808716835260606020840152612c55606084018688612a6d565b915080841660408401525095945050505050565b60006001600160a01b03808716835260606020840152612c55606084018688612aec565b600060e082016001600160a01b03808c16845260208b818601528a6040860152896060860152881515608086015281881660a086015260e060c08601528286845261010086019050879350845b87811015612d01578435612ced81613114565b841682529382019390820190600101612cda565b509d9c50505050505050505050505050565b6000610140820190506001600160a01b0385168252602060ff851681840152604083018460005b6008811015612d5757815183529183019190830190600101612d3a565b50505050949350505050565b60006001600160a01b03808716835280861660208401525060606040830152612d90606083018486612a6d565b9695505050505050565b6001600160a01b0384168152604060208201526000612dbd604083018486612a6d565b95945050505050565b60208152600061240b602083018486612aec565b604081526000612dee604083018587612aec565b90506001600160a01b0383166020830152949350505050565b6020815260008251806020840152612e26816040850160208701613035565b601f01601f19169190910160400192915050565b6000808335601e19843603018112612e50578283fd5b83018035915067ffffffffffffffff821115612e6a578283fd5b6020019150600581901b360382131561250957600080fd5b6000808335601e19843603018112612e98578283fd5b83018035915067ffffffffffffffff821115612eb2578283fd5b602001915060608102360382131561250957600080fd5b6000808335601e19843603018112612edf578283fd5b83018035915067ffffffffffffffff821115612ef9578283fd5b60200191503681900382131561250957600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21833603018112612b28578182fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41833603018112612b28578182fd5b604051610100810167ffffffffffffffff81118282101715612f9857612f986130fe565b60405290565b6040805190810167ffffffffffffffff81118282101715612f9857612f986130fe565b604051601f8201601f1916810167ffffffffffffffff81118282101715612fea57612fea6130fe565b604052919050565b60008219821115613005576130056130d2565b500190565b600082613019576130196130e8565b500490565b600082821015613030576130306130d2565b500390565b60005b83811015613050578181015183820152602001613038565b8381111561305f576000848401525b50505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613097576130976130d2565b5060010190565b600060ff821660ff8114156130b5576130b56130d2565b60010192915050565b6000826130cd576130cd6130e8565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461312957600080fd5b5056fea264697066735822122095f5c178b0301f2b553c515ab352d5d6e920455306d39dedbace9c15ed6d034a64736f6c63430008040033";

type SummonCollectiveDaoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SummonCollectiveDaoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SummonCollectiveDao__factory extends ContractFactory {
  constructor(...args: SummonCollectiveDaoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SummonCollectiveDao> {
    return super.deploy(overrides || {}) as Promise<SummonCollectiveDao>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SummonCollectiveDao {
    return super.attach(address) as SummonCollectiveDao;
  }
  override connect(signer: Signer): SummonCollectiveDao__factory {
    return super.connect(signer) as SummonCollectiveDao__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SummonCollectiveDaoInterface {
    return new utils.Interface(_abi) as SummonCollectiveDaoInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SummonCollectiveDao {
    return new Contract(address, _abi, signerOrProvider) as SummonCollectiveDao;
  }
}
