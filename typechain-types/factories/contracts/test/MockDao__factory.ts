/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockDao,
  MockDaoInterface,
} from "../../../contracts/test/MockDao";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "hasAdapterAccessToExtension",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isMember",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "enum MockDao.DaoState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000805460ff1916905534801561001a57600080fd5b506101ac8061002a6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80636cfdc32e14610046578063a230c52414610072578063c19d93fb14610086575b600080fd5b61005d6100543660046100ea565b60019392505050565b60405190151581526020015b60405180910390f35b61005d6100803660046100c9565b50600190565b6000546100939060ff1681565b6040516100699190610135565b803573ffffffffffffffffffffffffffffffffffffffff811681146100c457600080fd5b919050565b6000602082840312156100da578081fd5b6100e3826100a0565b9392505050565b6000806000606084860312156100fe578182fd5b610107846100a0565b9250610115602085016100a0565b9150604084013560ff8116811461012a578182fd5b809150509250925092565b6020810160028310610170577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9190529056fea2646970667358221220d5566f8ffc7aa9734451599986d4a2e50b8faa5ea1ea876578e832dbf78c173c64736f6c63430008040033";

type MockDaoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockDaoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockDao__factory extends ContractFactory {
  constructor(...args: MockDaoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockDao> {
    return super.deploy(overrides || {}) as Promise<MockDao>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockDao {
    return super.attach(address) as MockDao;
  }
  override connect(signer: Signer): MockDao__factory {
    return super.connect(signer) as MockDao__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockDaoInterface {
    return new utils.Interface(_abi) as MockDaoInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockDao {
    return new Contract(address, _abi, signerOrProvider) as MockDao;
  }
}
