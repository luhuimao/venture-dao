/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  InvestmentLibrary,
  InvestmentLibraryInterface,
} from "../../../../../contracts/vintage/libraries/fundingLibrary.sol/InvestmentLibrary";

const _abi = [
  {
    inputs: [],
    name: "PERCENTAGE_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROPOSALID_PREFIX",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type InvestmentLibraryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InvestmentLibraryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InvestmentLibrary__factory extends ContractFactory {
  constructor(...args: InvestmentLibraryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InvestmentLibrary> {
    return super.deploy(overrides || {}) as Promise<InvestmentLibrary>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InvestmentLibrary {
    return super.attach(address) as InvestmentLibrary;
  }
  override connect(signer: Signer): InvestmentLibrary__factory {
    return super.connect(signer) as InvestmentLibrary__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InvestmentLibraryInterface {
    return new utils.Interface(_abi) as InvestmentLibraryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InvestmentLibrary {
    return new Contract(address, _abi, signerOrProvider) as InvestmentLibrary;
  }
}
