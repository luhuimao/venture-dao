/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  VintageRaiserAllocationAdapter,
  VintageRaiserAllocationAdapterInterface,
} from "../../../../../contracts/vintage/adapters/VintageRaiserAllocation.sol/VintageRaiserAllocationAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "daoAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DaoRegistry",
        name: "dao",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setAllocation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610664806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635f15b1d91461003b578063a6d945cc14610050575b600080fd5b61004e61004936600461059f565b610099565b005b61008761005e366004610547565b6001600160a01b0391821660009081526020818152604080832093909416825291909152205490565b60405190815260200160405180910390f35b6100a2836102cc565b8061016d57506040517f17ba7d850000000000000000000000000000000000000000000000000000000081527f77cdf6056467142a33aa6f753fc1e3907f6850ebf08c7b63b107b0611a69b04e60048201526001600160a01b038416906317ba7d859060240160206040518083038186803b15801561012057600080fd5b505afa158015610134573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101589190610524565b6001600160a01b0316336001600160a01b0316145b8061023857506040517f17ba7d850000000000000000000000000000000000000000000000000000000081527fd90e10040720d66c9412cb511e3dbb6ba51669248a7495e763d44ab426893efa60048201526001600160a01b038416906317ba7d859060240160206040518083038186803b1580156101eb57600080fd5b505afa1580156101ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102239190610524565b6001600160a01b0316336001600160a01b0316145b6102a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f2141636365737300000000000000000000000000000000000000000000000000604482015260640160405180910390fd5b6001600160a01b039283166000908152602081815260408083209490951682529290925291902055565b600080826001600160a01b031663c19d93fb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561030857600080fd5b505afa15801561031c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034091906105df565b6001811115610378577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14801561051e5750816001600160a01b031663c67143666040518163ffffffff1660e01b815260040160206040518083038186803b1580156103b957600080fd5b505afa1580156103cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f191906105fe565b158061048857506040517fa230c5240000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b0383169063a230c5249060240160206040518083038186803b15801561045057600080fd5b505afa158015610464573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610488919061057f565b8061051e57506040517f68c18beb0000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b038316906368c18beb9060240160206040518083038186803b1580156104e657600080fd5b505afa1580156104fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051e919061057f565b92915050565b600060208284031215610535578081fd5b815161054081610616565b9392505050565b60008060408385031215610559578081fd5b823561056481610616565b9150602083013561057481610616565b809150509250929050565b600060208284031215610590578081fd5b81518015158114610540578182fd5b6000806000606084860312156105b3578081fd5b83356105be81610616565b925060208401356105ce81610616565b929592945050506040919091013590565b6000602082840312156105f0578081fd5b815160028110610540578182fd5b60006020828403121561060f578081fd5b5051919050565b6001600160a01b038116811461062b57600080fd5b5056fea2646970667358221220548871c433ab9c072c0f24aa1bee848f0a1ad902714b4ad7fd7cad9de271facd64736f6c63430008040033";

type VintageRaiserAllocationAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VintageRaiserAllocationAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VintageRaiserAllocationAdapter__factory extends ContractFactory {
  constructor(...args: VintageRaiserAllocationAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VintageRaiserAllocationAdapter> {
    return super.deploy(
      overrides || {}
    ) as Promise<VintageRaiserAllocationAdapter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VintageRaiserAllocationAdapter {
    return super.attach(address) as VintageRaiserAllocationAdapter;
  }
  override connect(signer: Signer): VintageRaiserAllocationAdapter__factory {
    return super.connect(signer) as VintageRaiserAllocationAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VintageRaiserAllocationAdapterInterface {
    return new utils.Interface(_abi) as VintageRaiserAllocationAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VintageRaiserAllocationAdapter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VintageRaiserAllocationAdapter;
  }
}
