/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  VintageRaiserAllocationAdapter,
  VintageRaiserAllocationAdapterInterface,
} from "../../../../../contracts/vintage/adapters/VintageRaiserAllocation.sol/VintageRaiserAllocationAdapter";

const _abi = [
  {
    inputs: [],
    name: "ACCESS_DENIED",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "daoAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DaoRegistry",
        name: "dao",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setAllocation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506106b0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635f15b1d91461003b578063a6d945cc14610050575b600080fd5b61004e6100493660046105eb565b610099565b005b61008761005e366004610593565b6001600160a01b0391821660009081526020818152604080832093909416825291909152205490565b60405190815260200160405180910390f35b6100a283610318565b8061015457506040516317ba7d8560e01b81527f145d8ebc4d7403f3cd60312331619ffb262c52c22bedf24c0148027dd4be3b0160048201526001600160a01b038416906317ba7d859060240160206040518083038186803b15801561010757600080fd5b505afa15801561011b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013f9190610570565b6001600160a01b0316336001600160a01b0316145b8061020657506040516317ba7d8560e01b81527fd90e10040720d66c9412cb511e3dbb6ba51669248a7495e763d44ab426893efa60048201526001600160a01b038416906317ba7d859060240160206040518083038186803b1580156101b957600080fd5b505afa1580156101cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f19190610570565b6001600160a01b0316336001600160a01b0316145b806102b857506040516317ba7d8560e01b81527fd2309e96d8bb2bfc0d3d1013db3e5e4cd56c2be2fdfad04875878bdc61b628d360048201526001600160a01b038416906317ba7d859060240160206040518083038186803b15801561026b57600080fd5b505afa15801561027f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a39190610570565b6001600160a01b0316336001600160a01b0316145b6102ee576040517f95383ea100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b039283166000908152602081815260408083209490951682529290925291902055565b600080826001600160a01b031663c19d93fb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561035457600080fd5b505afa158015610368573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038c919061062b565b60018111156103c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14801561056a5750816001600160a01b031663c67143666040518163ffffffff1660e01b815260040160206040518083038186803b15801561040557600080fd5b505afa158015610419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043d919061064a565b15806104d457506040517fa230c5240000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b0383169063a230c5249060240160206040518083038186803b15801561049c57600080fd5b505afa1580156104b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d491906105cb565b8061056a57506040517f68c18beb0000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b038316906368c18beb9060240160206040518083038186803b15801561053257600080fd5b505afa158015610546573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056a91906105cb565b92915050565b600060208284031215610581578081fd5b815161058c81610662565b9392505050565b600080604083850312156105a5578081fd5b82356105b081610662565b915060208301356105c081610662565b809150509250929050565b6000602082840312156105dc578081fd5b8151801515811461058c578182fd5b6000806000606084860312156105ff578081fd5b833561060a81610662565b9250602084013561061a81610662565b929592945050506040919091013590565b60006020828403121561063c578081fd5b81516002811061058c578182fd5b60006020828403121561065b578081fd5b5051919050565b6001600160a01b038116811461067757600080fd5b5056fea264697066735822122013ede0d4b7de94b1b0038848f6a4e399c5ea7037fe31e00e836b7faf341089b664736f6c63430008040033";

type VintageRaiserAllocationAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VintageRaiserAllocationAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VintageRaiserAllocationAdapter__factory extends ContractFactory {
  constructor(...args: VintageRaiserAllocationAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VintageRaiserAllocationAdapter> {
    return super.deploy(
      overrides || {}
    ) as Promise<VintageRaiserAllocationAdapter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VintageRaiserAllocationAdapter {
    return super.attach(address) as VintageRaiserAllocationAdapter;
  }
  override connect(signer: Signer): VintageRaiserAllocationAdapter__factory {
    return super.connect(signer) as VintageRaiserAllocationAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VintageRaiserAllocationAdapterInterface {
    return new utils.Interface(_abi) as VintageRaiserAllocationAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VintageRaiserAllocationAdapter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VintageRaiserAllocationAdapter;
  }
}
