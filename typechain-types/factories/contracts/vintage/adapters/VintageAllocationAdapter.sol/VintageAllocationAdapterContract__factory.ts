/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  VintageAllocationAdapterContract,
  VintageAllocationAdapterContractInterface,
} from "../../../../../contracts/vintage/adapters/VintageAllocationAdapter.sol/VintageAllocationAdapterContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "daoAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "proposalId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "lps",
        type: "address[]",
      },
    ],
    name: "AllocateToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gpAllocationBonusRadio",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "riceStakeAllocationRadio",
        type: "uint256",
      },
    ],
    name: "ConfigureDao",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENTAGE_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DaoRegistry",
        name: "dao",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "proposerAddr",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "proposalId",
        type: "bytes32",
      },
      {
        internalType: "uint256[6]",
        name: "uint256Args",
        type: "uint256[6]",
      },
    ],
    name: "allocateProjectToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DaoRegistry",
        name: "dao",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gpAllocationBonusRadio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "riceStakeAllocationRadio",
        type: "uint256",
      },
    ],
    name: "configureDao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DaoRegistry",
        name: "dao",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "getFundingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DaoRegistry",
        name: "dao",
        type: "address",
      },
      {
        internalType: "address",
        name: "proposerAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "getProposerBonus",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DaoRegistry",
        name: "dao",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "proposalId",
        type: "bytes32",
      },
    ],
    name: "ifEligible",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DaoRegistry",
        name: "dao",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "proposalId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recepient",
        type: "address",
      },
    ],
    name: "isVestCreated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DaoRegistry",
        name: "dao",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "proposalId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "vestCreated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "vestingInfos",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "created",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611d05806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80637d15e7b911610076578063a60e68fe1161005b578063a60e68fe146101b0578063c431eb63146101c3578063e256888f146101d657600080fd5b80637d15e7b91461017c578063944120fb1461018f57600080fd5b80631190b0a6146100a857806324d1669d146100fd578063560dbdd7146101125780636cb4e9eb14610135575b600080fd5b6100e36100b636600461189b565b60026020908152600093845260408085208252928452828420905282529020805460019091015460ff1682565b604080519283529015156020830152015b60405180910390f35b61011061010b3660046119b0565b6101e5565b005b610125610120366004611a9c565b61101e565b60405190151581526020016100f4565b610125610143366004611a9c565b6001600160a01b039283166000908152600260209081526040808320948352938152838220929094168152925290206001015460ff1690565b61012561018a366004611a5c565b611183565b6101a261019d366004611a5c565b6111c8565b6040519081526020016100f4565b6101106101be366004611ab0565b611344565b6101a26101d1366004611a5c565b611437565b6101a2670de0b6b3a764000081565b6040516317ba7d8560e01b81527f0fd8cce4ef00a7a8c0c5f91194bc80f122deefe664dd2a2384687da62ab117d160048201526001600160a01b038616906317ba7d859060240160206040518083038186803b15801561024457600080fd5b505afa158015610258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027c919061187f565b6001600160a01b0316336001600160a01b0316146103075760405162461bcd60e51b815260206004820152602160248201527f616c6c6f6361746550726f6a656374546f6b656e3a3a6163636573732064656e60448201527f790000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610395604051806101e0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001600060ff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b815160e082015260208201516101008201526040808301516101208301526060830151610140830152608083015161016083015260a0830151610180830152517f593e96b60000000000000000000000000000000000000000000000000000000081527f161fca6912f107b0f13c9c7275de7391b32d2ea1c52ffba65a3c961880a0c60f60048201526001600160a01b0387169063593e96b69060240160206040518083038186803b15801561044a57600080fd5b505afa15801561045e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610482919061187f565b6001600160a01b03908116825260e08201516040516317ba7d8560e01b81527fde483f9dde6f6b12a62abdfd75010c5234f3ce7693a592507d331ec725f77257600482015290918781169163dd62ed3e918a16906317ba7d859060240160206040518083038186803b1580156104f757600080fd5b505afa15801561050b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052f919061187f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b03909116600482015230602482015260440160206040518083038186803b15801561058c57600080fd5b505afa1580156105a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c49190611b03565b10156106385760405162461bcd60e51b815260206004820152603f60248201527f416c6c6f636174696f6e416461707465723a3a616c6c6f6361746550726f6a6560448201527f6374546f6b656e3a3a696e73756666696369656e7420616c6c6f77616e63650060648201526084016102fe565b6040516317ba7d8560e01b81527fde483f9dde6f6b12a62abdfd75010c5234f3ce7693a592507d331ec725f7725760048201526001600160a01b03808716916323b872dd918916906317ba7d859060240160206040518083038186803b1580156106a157600080fd5b505afa1580156106b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d9919061187f565b60e0848101516040519184901b7fffffffff000000000000000000000000000000000000000000000000000000001682526001600160a01b039290921660048201523060248201526044810191909152606401602060405180830381600087803b15801561074657600080fd5b505af115801561075a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077e9190611990565b506040517f9283ae3a0000000000000000000000000000000000000000000000000000000081527f0e8185cfd5d91894cd75ba6858a811ccb98f89440700b6d75931c8de1e97fa026004820152670de0b6b3a7640000906001600160a01b03881690639283ae3a9060240160206040518083038186803b15801561080157600080fd5b505afa158015610815573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108399190611b03565b8260e001516108489190611c17565b6108529190611bf7565b6101a082015260e081015161086a90879086906111c8565b60c08201526101a0810151156109f3576040517ffd310d290000000000000000000000000000000000000000000000000000000081527f5460409b9aa4688f80c10b29c3d7ad16025f050f472a6882a45fa7bb9bd12fb160048201526001600160a01b0387169063fd310d299060240160206040518083038186803b1580156108f257600080fd5b505afa158015610906573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092a919061187f565b6001600160a01b039081166101c083019081526040805180820182526101a08501518a85166000908152600260209081528482208a835281528482209551909616815293909452912054909182916109829190611bdf565b8152600060209182018190526001600160a01b03898116825260028352604080832088845284528083206101c08701519092168352908352902082518155918101516001909201805460ff1916921515929092179091556101a082015190820180516109ef908390611bdf565b9052505b846001600160a01b031663dd62ed3e30886001600160a01b03166317ba7d857fdfea78be99560632cc4c199ca1b0d68ffe0bbbb07b685976cefc8820374ac73a6040518263ffffffff1660e01b8152600401610a5191815260200190565b60206040518083038186803b158015610a6957600080fd5b505afa158015610a7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa1919061187f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0392831660048201529116602482015260440160206040518083038186803b158015610aff57600080fd5b505afa158015610b13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b379190611b03565b6040820181905260e0820151610b4c91611bdf565b60608201526040516317ba7d8560e01b81527fdfea78be99560632cc4c199ca1b0d68ffe0bbbb07b685976cefc8820374ac73a60048201526001600160a01b038681169163095ea7b3918916906317ba7d859060240160206040518083038186803b158015610bba57600080fd5b505afa158015610bce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf2919061187f565b60608401516040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015610c5557600080fd5b505af1158015610c69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8d9190611990565b50600081600001516001600160a01b031663b2f5a54c6040518163ffffffff1660e01b815260040160006040518083038186803b158015610ccd57600080fd5b505afa158015610ce1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d0991908101906118dc565b805190915015610e6557600060808301525b8051826080015160ff161015610e6557610d828782846080015160ff1681518110610d5657634e487b7160e01b600052603260045260246000fd5b60200260200101518460c00151856101a001518660e00151610d789190611c54565b6101d19190611c54565b60a0830181905215610e4a5760408051808201825260a08401518152600060208083018290526001600160a01b038b1682526002815283822088835290529182206080850151845192939192859160ff16908110610df057634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b031682528181019290925260400160002082518155918101516001909201805460ff19169215159290921790915560a08301519083018051610e46908390611bdf565b9052505b60808201805190610e5a82611c6b565b60ff16905250610d1b565b6001600160a01b03851615610f345760c082015115610f345760408051808201825260c08401516001600160a01b03808b166000908152600260209081528582208a83528152858220928b16825291909152929092205490918291610eca9190611bdf565b8152600060209182018190526001600160a01b038a811682526002835260408083208984528452808320918a168352908352902082518155918101516001909201805460ff19169215159290921790915560c08301519083018051610f30908390611bdf565b9052505b8160e0015182602001511115610fd85760405162461bcd60e51b815260206004820152605c60248201527f416c6c6f636174696f6e416461707465723a3a616c6c6f6361746550726f6a6560448201527f6374546f6b656e3a3a6469737472696275746520746f6b656e20616d6f756e7460648201527f20657863656564732072657475726e20746f6b656e20616d6f756e7400000000608482015260a4016102fe565b7fb30991f84bbcadc6375188d275cc12036a829854c38fa1fb9bf1125fc45b08fe8785878460405161100d9493929190611b1b565b60405180910390a150505050505050565b6040516317ba7d8560e01b81527f8295fbcf0c0d839b7cf11cacb43f22c81604fd9f0e4b295ff1d641ad9dd5786a60048201526000906001600160a01b038516906317ba7d859060240160206040518083038186803b15801561108057600080fd5b505afa158015611094573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b8919061187f565b6001600160a01b0316336001600160a01b03161461113e5760405162461bcd60e51b815260206004820152602b60248201527f416c6c6f636174696f6e416461707465723a73747265616d437265617465643a60448201527f4163636573732064656e7900000000000000000000000000000000000000000060648201526084016102fe565b506001600160a01b03808416600090815260026020908152604080832086845282528083209385168352929052206001908101805460ff1916821790555b9392505050565b6001600160a01b0380841660009081526002602090815260408083208584528252808320938616835292905290812054156111c05750600161117c565b50600061117c565b6040517fa230c5240000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301526000919085169063a230c5249060240160206040518083038186803b15801561122657600080fd5b505afa15801561123a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125e9190611990565b61126a5750600061117c565b6040517f9283ae3a0000000000000000000000000000000000000000000000000000000081527f23bba46e5025fb6d2325c93cad4f861289d697c0913f7e18dab6bb065e2bdc286004820152600090670de0b6b3a7640000906001600160a01b03871690639283ae3a9060240160206040518083038186803b1580156112ef57600080fd5b505afa158015611303573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113279190611b03565b6113319085611c17565b61133b9190611bf7565b95945050505050565b6040517f68c18beb00000000000000000000000000000000000000000000000000000000815233600482015283906001600160a01b038216906368c18beb9060240160206040518083038186803b15801561139e57600080fd5b505afa1580156113b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d69190611990565b806113e557506113e581611640565b6114315760405162461bcd60e51b815260206004820152600b60248201527f6f6e6c794164617074657200000000000000000000000000000000000000000060448201526064016102fe565b50505050565b6040517f593e96b60000000000000000000000000000000000000000000000000000000081527f161fca6912f107b0f13c9c7275de7391b32d2ea1c52ffba65a3c961880a0c60f600482015260009081906001600160a01b0386169063593e96b69060240160206040518083038186803b1580156114b457600080fd5b505afa1580156114c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ec919061187f565b90506000816001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561152957600080fd5b505afa15801561153d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115619190611b03565b6040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b0387811660048301529192506000918416906370a082319060240160206040518083038186803b1580156115c157600080fd5b505afa1580156115d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f99190611b03565b9050811580611606575080155b8061160f575084155b15611620576000935050505061117c565b8161162b8683611c17565b6116359190611bf7565b979650505050505050565b600080826001600160a01b031663c19d93fb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561167c57600080fd5b505afa158015611690573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b49190611ae4565b60018111156116d357634e487b7160e01b600052602160045260246000fd5b1480156118795750816001600160a01b031663c67143666040518163ffffffff1660e01b815260040160206040518083038186803b15801561171457600080fd5b505afa158015611728573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061174c9190611b03565b15806117e357506040517fa230c5240000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b0383169063a230c5249060240160206040518083038186803b1580156117ab57600080fd5b505afa1580156117bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e39190611990565b8061187957506040517f68c18beb0000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b038316906368c18beb9060240160206040518083038186803b15801561184157600080fd5b505afa158015611855573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118799190611990565b92915050565b600060208284031215611890578081fd5b815161117c81611cb7565b6000806000606084860312156118af578182fd5b83356118ba81611cb7565b92506020840135915060408401356118d181611cb7565b809150509250925092565b600060208083850312156118ee578182fd5b825167ffffffffffffffff80821115611905578384fd5b818501915085601f830112611918578384fd5b81518181111561192a5761192a611ca1565b8060051b915061193b848301611bae565b8181528481019084860184860187018a1015611955578788fd5b8795505b83861015611983578051945061196e85611cb7565b84835260019590950194918601918601611959565b5098975050505050505050565b6000602082840312156119a1578081fd5b8151801515811461117c578182fd5b60008060008060006101408087890312156119c9578182fd5b86356119d481611cb7565b95506020878101356119e581611cb7565b955060408801356119f581611cb7565b945060608801359350609f88018913611a0c578283fd5b611a14611b85565b8060808a018b858c011115611a27578586fd5b8594505b6006851015611a4a578035835260019490940193918301918301611a2b565b50809450505050509295509295909350565b600080600060608486031215611a70578283fd5b8335611a7b81611cb7565b92506020840135611a8b81611cb7565b929592945050506040919091013590565b6000806000606084860312156118af578283fd5b600080600060608486031215611ac4578283fd5b8335611acf81611cb7565b95602085013595506040909401359392505050565b600060208284031215611af5578081fd5b81516002811061117c578182fd5b600060208284031215611b14578081fd5b5051919050565b6000608082016001600160a01b0380881684526020878186015281871660408601526080606086015282865180855260a0870191508288019450855b81811015611b75578551851683529483019491830191600101611b57565b50909a9950505050505050505050565b60405160c0810167ffffffffffffffff81118282101715611ba857611ba8611ca1565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611bd757611bd7611ca1565b604052919050565b60008219821115611bf257611bf2611c8b565b500190565b600082611c1257634e487b7160e01b81526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611c4f57611c4f611c8b565b500290565b600082821015611c6657611c66611c8b565b500390565b600060ff821660ff811415611c8257611c82611c8b565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114611ccc57600080fd5b5056fea2646970667358221220275357cf8d55d6bf225e693d34d6fc6f6c5b72eed81005dceb29b1af6719df3c64736f6c63430008040033";

type VintageAllocationAdapterContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VintageAllocationAdapterContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VintageAllocationAdapterContract__factory extends ContractFactory {
  constructor(...args: VintageAllocationAdapterContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VintageAllocationAdapterContract> {
    return super.deploy(
      overrides || {}
    ) as Promise<VintageAllocationAdapterContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VintageAllocationAdapterContract {
    return super.attach(address) as VintageAllocationAdapterContract;
  }
  override connect(signer: Signer): VintageAllocationAdapterContract__factory {
    return super.connect(signer) as VintageAllocationAdapterContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VintageAllocationAdapterContractInterface {
    return new utils.Interface(
      _abi
    ) as VintageAllocationAdapterContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VintageAllocationAdapterContract {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VintageAllocationAdapterContract;
  }
}
