/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../common";

export interface VintageFundingPoolAdapterHelperContractInterface
  extends utils.Interface {
  functions: {
    "getAllGorvernorBalance(address)": FunctionFragment;
    "getFundEndTime(address)": FunctionFragment;
    "getFundRaiseWindowCloseTime(address)": FunctionFragment;
    "getFundRaiseWindowOpenTime(address)": FunctionFragment;
    "getFundRaisingMaxAmount(address)": FunctionFragment;
    "getFundRaisingTarget(address)": FunctionFragment;
    "getFundReturnDuration(address)": FunctionFragment;
    "getFundStartTime(address)": FunctionFragment;
    "getMaxInvestmentForLP(address)": FunctionFragment;
    "getMinInvestmentForLP(address)": FunctionFragment;
    "getRedemptDuration(address)": FunctionFragment;
    "getRedeptPeriod(address)": FunctionFragment;
    "latestRedempteTime(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getAllGorvernorBalance"
      | "getFundEndTime"
      | "getFundRaiseWindowCloseTime"
      | "getFundRaiseWindowOpenTime"
      | "getFundRaisingMaxAmount"
      | "getFundRaisingTarget"
      | "getFundReturnDuration"
      | "getFundStartTime"
      | "getMaxInvestmentForLP"
      | "getMinInvestmentForLP"
      | "getRedemptDuration"
      | "getRedeptPeriod"
      | "latestRedempteTime"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getAllGorvernorBalance",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFundEndTime",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFundRaiseWindowCloseTime",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFundRaiseWindowOpenTime",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFundRaisingMaxAmount",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFundRaisingTarget",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFundReturnDuration",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFundStartTime",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getMaxInvestmentForLP",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getMinInvestmentForLP",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getRedemptDuration",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getRedeptPeriod",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "latestRedempteTime",
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(
    functionFragment: "getAllGorvernorBalance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFundEndTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFundRaiseWindowCloseTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFundRaiseWindowOpenTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFundRaisingMaxAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFundRaisingTarget",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFundReturnDuration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFundStartTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaxInvestmentForLP",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMinInvestmentForLP",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRedemptDuration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRedeptPeriod",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "latestRedempteTime",
    data: BytesLike
  ): Result;

  events: {};
}

export interface VintageFundingPoolAdapterHelperContract extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: VintageFundingPoolAdapterHelperContractInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getAllGorvernorBalance(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getFundEndTime(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getFundRaiseWindowCloseTime(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getFundRaiseWindowOpenTime(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getFundRaisingMaxAmount(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getFundRaisingTarget(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getFundReturnDuration(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getFundStartTime(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getMaxInvestmentForLP(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getMinInvestmentForLP(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getRedemptDuration(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getRedeptPeriod(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    latestRedempteTime(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;
  };

  getAllGorvernorBalance(
    dao: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getFundEndTime(
    dao: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getFundRaiseWindowCloseTime(
    dao: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getFundRaiseWindowOpenTime(
    dao: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getFundRaisingMaxAmount(
    dao: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getFundRaisingTarget(
    dao: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getFundReturnDuration(
    dao: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getFundStartTime(
    dao: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getMaxInvestmentForLP(
    dao: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getMinInvestmentForLP(
    dao: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getRedemptDuration(
    dao: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getRedeptPeriod(
    dao: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  latestRedempteTime(
    dao: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber]>;

  callStatic: {
    getAllGorvernorBalance(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFundEndTime(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFundRaiseWindowCloseTime(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFundRaiseWindowOpenTime(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFundRaisingMaxAmount(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFundRaisingTarget(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFundReturnDuration(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFundStartTime(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaxInvestmentForLP(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMinInvestmentForLP(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRedemptDuration(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRedeptPeriod(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    latestRedempteTime(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;
  };

  filters: {};

  estimateGas: {
    getAllGorvernorBalance(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFundEndTime(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFundRaiseWindowCloseTime(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFundRaiseWindowOpenTime(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFundRaisingMaxAmount(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFundRaisingTarget(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFundReturnDuration(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFundStartTime(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaxInvestmentForLP(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMinInvestmentForLP(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRedemptDuration(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRedeptPeriod(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    latestRedempteTime(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getAllGorvernorBalance(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFundEndTime(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFundRaiseWindowCloseTime(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFundRaiseWindowOpenTime(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFundRaisingMaxAmount(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFundRaisingTarget(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFundReturnDuration(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFundStartTime(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMaxInvestmentForLP(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMinInvestmentForLP(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRedemptDuration(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRedeptPeriod(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    latestRedempteTime(
      dao: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
