/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "AccessControlEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlEnumerable__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "IAccessControlEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlEnumerable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1271__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "DoubleEndedQueue",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DoubleEndedQueue__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721TokenReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721TokenReceiver__factory>;
    getContractFactory(
      name: "IERC20Uniswap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Uniswap__factory>;
    getContractFactory(
      name: "IUniswapV2Callee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Callee__factory>;
    getContractFactory(
      name: "IUniswapV2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Factory__factory>;
    getContractFactory(
      name: "IUniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Pair__factory>;
    getContractFactory(
      name: "UniswapV2ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2ERC20__factory>;
    getContractFactory(
      name: "UniswapV2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2Factory__factory>;
    getContractFactory(
      name: "IMigrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMigrator__factory>;
    getContractFactory(
      name: "UniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2Pair__factory>;
    getContractFactory(
      name: "IConfiguration",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IConfiguration__factory>;
    getContractFactory(
      name: "IFinancing",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFinancing__factory>;
    getContractFactory(
      name: "IManaging",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IManaging__factory>;
    getContractFactory(
      name: "IStakingRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStakingRewards__factory>;
    getContractFactory(
      name: "Owned",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Owned__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "RewardsDistributionRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RewardsDistributionRecipient__factory>;
    getContractFactory(
      name: "StakingRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StakingRewards__factory>;
    getContractFactory(
      name: "ISablier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISablier__factory>;
    getContractFactory(
      name: "Migrations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Migrations__factory>;
    getContractFactory(
      name: "Imports",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Imports__factory>;
    getContractFactory(
      name: "BaseBoringBatchable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseBoringBatchable__factory>;
    getContractFactory(
      name: "BentoBoxV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BentoBoxV1__factory>;
    getContractFactory(
      name: "BoringBatchable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoringBatchable__factory>;
    getContractFactory(
      name: "BoringFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoringFactory__factory>;
    getContractFactory(
      name: "BoringOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoringOwnable__factory>;
    getContractFactory(
      name: "BoringOwnableData",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoringOwnableData__factory>;
    getContractFactory(
      name: "IBatchFlashBorrower",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBatchFlashBorrower__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IFlashBorrower",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlashBorrower__factory>;
    getContractFactory(
      name: "IMasterContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMasterContract__factory>;
    getContractFactory(
      name: "IStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStrategy__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "MasterContractManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MasterContractManager__factory>;
    getContractFactory(
      name: "IBentoBoxMinimal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBentoBoxMinimal__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IFuroStream",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFuroStream__factory>;
    getContractFactory(
      name: "IFuroVesting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFuroVesting__factory>;
    getContractFactory(
      name: "ITasker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITasker__factory>;
    getContractFactory(
      name: "ITokenURIFetcher",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenURIFetcher__factory>;
    getContractFactory(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeERC20__factory>;
    getContractFactory(
      name: "ERC20Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Mock__factory>;
    getContractFactory(
      name: "SushiSwapFactoryMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SushiSwapFactoryMock__factory>;
    getContractFactory(
      name: "SushiSwapPairMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SushiSwapPairMock__factory>;
    getContractFactory(
      name: "TaskReceiverMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TaskReceiverMock__factory>;
    getContractFactory(
      name: "BoringOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoringOwnable__factory>;
    getContractFactory(
      name: "BoringOwnableData",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoringOwnableData__factory>;
    getContractFactory(
      name: "Multicall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multicall__factory>;
    getContractFactory(
      name: "IReimbursement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IReimbursement__factory>;
    getContractFactory(
      name: "DaoFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DaoFactory__factory>;
    getContractFactory(
      name: "DaoRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DaoRegistry__factory>;
    getContractFactory(
      name: "BankExtension",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BankExtension__factory>;
    getContractFactory(
      name: "BankFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BankFactory__factory>;
    getContractFactory(
      name: "ERC1271Extension",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1271Extension__factory>;
    getContractFactory(
      name: "ERC1271ExtensionFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1271ExtensionFactory__factory>;
    getContractFactory(
      name: "ExecutorExtension",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExecutorExtension__factory>;
    getContractFactory(
      name: "ExecutorExtensionFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExecutorExtensionFactory__factory>;
    getContractFactory(
      name: "IExtension",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExtension__factory>;
    getContractFactory(
      name: "IFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFactory__factory>;
    getContractFactory(
      name: "NFTExtension",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTExtension__factory>;
    getContractFactory(
      name: "NFTCollectionFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTCollectionFactory__factory>;
    getContractFactory(
      name: "StakingRiceExtension",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StakingRiceExtension__factory>;
    getContractFactory(
      name: "RiceStakingFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RiceStakingFactory__factory>;
    getContractFactory(
      name: "ERC20Extension",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Extension__factory>;
    getContractFactory(
      name: "ERC20TokenExtensionFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20TokenExtensionFactory__factory>;
    getContractFactory(
      name: "IERC20TransferStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20TransferStrategy__factory>;
    getContractFactory(
      name: "InternalTokenVestingExtension",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InternalTokenVestingExtension__factory>;
    getContractFactory(
      name: "InternalTokenVestingExtensionFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InternalTokenVestingExtensionFactory__factory>;
    getContractFactory(
      name: "FlexAllocationAdapterContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlexAllocationAdapterContract__factory>;
    getContractFactory(
      name: "FlexDaoSetAdapterContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlexDaoSetAdapterContract__factory>;
    getContractFactory(
      name: "FlexDaoSetHelperAdapterContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlexDaoSetHelperAdapterContract__factory>;
    getContractFactory(
      name: "FlexDaoSetPollingAdapterContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlexDaoSetPollingAdapterContract__factory>;
    getContractFactory(
      name: "FlexDaoSetVotingAdapterContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlexDaoSetVotingAdapterContract__factory>;
    getContractFactory(
      name: "FlexERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlexERC721__factory>;
    getContractFactory(
      name: "FlexFreeInEscrowFundAdapterContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlexFreeInEscrowFundAdapterContract__factory>;
    getContractFactory(
      name: "FlexFundingAdapterContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlexFundingAdapterContract__factory>;
    getContractFactory(
      name: "FlexFundingHelperAdapterContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlexFundingHelperAdapterContract__factory>;
    getContractFactory(
      name: "FlexInvestmentPoolAdapterContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlexInvestmentPoolAdapterContract__factory>;
    getContractFactory(
      name: "FlexInvestmentPaybackTokenAdapterContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlexInvestmentPaybackTokenAdapterContract__factory>;
    getContractFactory(
      name: "FlexPollingVotingContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlexPollingVotingContract__factory>;
    getContractFactory(
      name: "FlexStewardAllocationAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlexStewardAllocationAdapter__factory>;
    getContractFactory(
      name: "FlexVesting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlexVesting__factory>;
    getContractFactory(
      name: "FlexVestingERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlexVestingERC721__factory>;
    getContractFactory(
      name: "FlexVotingContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlexVotingContract__factory>;
    getContractFactory(
      name: "IFlexFunding",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlexFunding__factory>;
    getContractFactory(
      name: "IFlexVesting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlexVesting__factory>;
    getContractFactory(
      name: "IFlexVoting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlexVoting__factory>;
    getContractFactory(
      name: "StewardManagementContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StewardManagementContract__factory>;
    getContractFactory(
      name: "FlexInvestmentPoolExtension",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlexInvestmentPoolExtension__factory>;
    getContractFactory(
      name: "FlexFundingPoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlexFundingPoolFactory__factory>;
    getContractFactory(
      name: "FlexDaosetLibrary",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlexDaosetLibrary__factory>;
    getContractFactory(
      name: "Greeter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Greeter__factory>;
    getContractFactory(
      name: "MemberGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MemberGuard__factory>;
    getContractFactory(
      name: "GovernanceHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernanceHelper__factory>;
    getContractFactory(
      name: "WETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH__factory>;
    getContractFactory(
      name: "SummonDao",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SummonDao__factory>;
    getContractFactory(
      name: "SummonVintageDao",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SummonVintageDao__factory>;
    getContractFactory(
      name: "ERC1155TestToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155TestToken__factory>;
    getContractFactory(
      name: "ERC20MinterContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20MinterContract__factory>;
    getContractFactory(
      name: "MockDao",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockDao__factory>;
    getContractFactory(
      name: "OLToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OLToken__factory>;
    getContractFactory(
      name: "PixelNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PixelNFT__factory>;
    getContractFactory(
      name: "ProxTokenContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxTokenContract__factory>;
    getContractFactory(
      name: "TestFairShareCalc",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestFairShareCalc__factory>;
    getContractFactory(
      name: "TestMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestMath__factory>;
    getContractFactory(
      name: "TestRiceToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestRiceToken__factory>;
    getContractFactory(
      name: "TestToken1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestToken1__factory>;
    getContractFactory(
      name: "TestToken2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestToken2__factory>;
    getContractFactory(
      name: "DaoArtifacts",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DaoArtifacts__factory>;
    getContractFactory(
      name: "Multicall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multicall__factory>;
    getContractFactory(
      name: "Signatures",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Signatures__factory>;
    getContractFactory(
      name: "IVesting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVesting__factory>;
    getContractFactory(
      name: "IVintageInvestment",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVintageInvestment__factory>;
    getContractFactory(
      name: "IVintageFundRaise",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVintageFundRaise__factory>;
    getContractFactory(
      name: "IVintageVoting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVintageVoting__factory>;
    getContractFactory(
      name: "VintageAllocationAdapterContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VintageAllocationAdapterContract__factory>;
    getContractFactory(
      name: "VintageDaoSetAdapterContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VintageDaoSetAdapterContract__factory>;
    getContractFactory(
      name: "VintageDistributeAdatperContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VintageDistributeAdatperContract__factory>;
    getContractFactory(
      name: "VintageEscrowFundAdapterContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VintageEscrowFundAdapterContract__factory>;
    getContractFactory(
      name: "VintageFreeInEscrowFundAdapterContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VintageFreeInEscrowFundAdapterContract__factory>;
    getContractFactory(
      name: "VintageFundingAdapterContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VintageFundingAdapterContract__factory>;
    getContractFactory(
      name: "VintageFundingPoolAdapterContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VintageFundingPoolAdapterContract__factory>;
    getContractFactory(
      name: "VintageFundingPoolAdapterHelperContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VintageFundingPoolAdapterHelperContract__factory>;
    getContractFactory(
      name: "VintageInvestmentPaybackTokenAdapterContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VintageInvestmentPaybackTokenAdapterContract__factory>;
    getContractFactory(
      name: "VintageFundRaiseAdapterContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VintageFundRaiseAdapterContract__factory>;
    getContractFactory(
      name: "VintageRaiserAllocationAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VintageRaiserAllocationAdapter__factory>;
    getContractFactory(
      name: "VintageRaiserManagementContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VintageRaiserManagementContract__factory>;
    getContractFactory(
      name: "VintageVesting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VintageVesting__factory>;
    getContractFactory(
      name: "VintageVestingERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VintageVestingERC721__factory>;
    getContractFactory(
      name: "VintageVotingContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VintageVotingContract__factory>;
    getContractFactory(
      name: "VintageFundingPoolExtension",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VintageFundingPoolExtension__factory>;
    getContractFactory(
      name: "VintageFundingPoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VintageFundingPoolFactory__factory>;
    getContractFactory(
      name: "InvestmentLibrary",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InvestmentLibrary__factory>;
    getContractFactory(
      name: "ERC20Detailed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Detailed__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuard__factory>;

    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "AccessControlEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlEnumerable>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "IAccessControlEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlEnumerable>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1271",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1271>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "DoubleEndedQueue",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DoubleEndedQueue>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721TokenReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721TokenReceiver>;
    getContractAt(
      name: "IERC20Uniswap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Uniswap>;
    getContractAt(
      name: "IUniswapV2Callee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Callee>;
    getContractAt(
      name: "IUniswapV2Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Factory>;
    getContractAt(
      name: "IUniswapV2Pair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Pair>;
    getContractAt(
      name: "UniswapV2ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapV2ERC20>;
    getContractAt(
      name: "UniswapV2Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapV2Factory>;
    getContractAt(
      name: "IMigrator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMigrator>;
    getContractAt(
      name: "UniswapV2Pair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapV2Pair>;
    getContractAt(
      name: "IConfiguration",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IConfiguration>;
    getContractAt(
      name: "IFinancing",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFinancing>;
    getContractAt(
      name: "IManaging",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IManaging>;
    getContractAt(
      name: "IStakingRewards",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStakingRewards>;
    getContractAt(
      name: "Owned",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Owned>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "RewardsDistributionRecipient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RewardsDistributionRecipient>;
    getContractAt(
      name: "StakingRewards",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StakingRewards>;
    getContractAt(
      name: "ISablier",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISablier>;
    getContractAt(
      name: "Migrations",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Migrations>;
    getContractAt(
      name: "Imports",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Imports>;
    getContractAt(
      name: "BaseBoringBatchable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseBoringBatchable>;
    getContractAt(
      name: "BentoBoxV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BentoBoxV1>;
    getContractAt(
      name: "BoringBatchable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BoringBatchable>;
    getContractAt(
      name: "BoringFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BoringFactory>;
    getContractAt(
      name: "BoringOwnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BoringOwnable>;
    getContractAt(
      name: "BoringOwnableData",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BoringOwnableData>;
    getContractAt(
      name: "IBatchFlashBorrower",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBatchFlashBorrower>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IFlashBorrower",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlashBorrower>;
    getContractAt(
      name: "IMasterContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMasterContract>;
    getContractAt(
      name: "IStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStrategy>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "MasterContractManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MasterContractManager>;
    getContractAt(
      name: "IBentoBoxMinimal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBentoBoxMinimal>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IFuroStream",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFuroStream>;
    getContractAt(
      name: "IFuroVesting",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFuroVesting>;
    getContractAt(
      name: "ITasker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITasker>;
    getContractAt(
      name: "ITokenURIFetcher",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenURIFetcher>;
    getContractAt(
      name: "SafeERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeERC20>;
    getContractAt(
      name: "ERC20Mock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Mock>;
    getContractAt(
      name: "SushiSwapFactoryMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SushiSwapFactoryMock>;
    getContractAt(
      name: "SushiSwapPairMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SushiSwapPairMock>;
    getContractAt(
      name: "TaskReceiverMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TaskReceiverMock>;
    getContractAt(
      name: "BoringOwnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BoringOwnable>;
    getContractAt(
      name: "BoringOwnableData",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BoringOwnableData>;
    getContractAt(
      name: "Multicall",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Multicall>;
    getContractAt(
      name: "IReimbursement",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IReimbursement>;
    getContractAt(
      name: "DaoFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DaoFactory>;
    getContractAt(
      name: "DaoRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DaoRegistry>;
    getContractAt(
      name: "BankExtension",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BankExtension>;
    getContractAt(
      name: "BankFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BankFactory>;
    getContractAt(
      name: "ERC1271Extension",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1271Extension>;
    getContractAt(
      name: "ERC1271ExtensionFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1271ExtensionFactory>;
    getContractAt(
      name: "ExecutorExtension",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExecutorExtension>;
    getContractAt(
      name: "ExecutorExtensionFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExecutorExtensionFactory>;
    getContractAt(
      name: "IExtension",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExtension>;
    getContractAt(
      name: "IFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFactory>;
    getContractAt(
      name: "NFTExtension",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTExtension>;
    getContractAt(
      name: "NFTCollectionFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTCollectionFactory>;
    getContractAt(
      name: "StakingRiceExtension",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StakingRiceExtension>;
    getContractAt(
      name: "RiceStakingFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RiceStakingFactory>;
    getContractAt(
      name: "ERC20Extension",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Extension>;
    getContractAt(
      name: "ERC20TokenExtensionFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20TokenExtensionFactory>;
    getContractAt(
      name: "IERC20TransferStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20TransferStrategy>;
    getContractAt(
      name: "InternalTokenVestingExtension",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InternalTokenVestingExtension>;
    getContractAt(
      name: "InternalTokenVestingExtensionFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InternalTokenVestingExtensionFactory>;
    getContractAt(
      name: "FlexAllocationAdapterContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlexAllocationAdapterContract>;
    getContractAt(
      name: "FlexDaoSetAdapterContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlexDaoSetAdapterContract>;
    getContractAt(
      name: "FlexDaoSetHelperAdapterContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlexDaoSetHelperAdapterContract>;
    getContractAt(
      name: "FlexDaoSetPollingAdapterContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlexDaoSetPollingAdapterContract>;
    getContractAt(
      name: "FlexDaoSetVotingAdapterContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlexDaoSetVotingAdapterContract>;
    getContractAt(
      name: "FlexERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlexERC721>;
    getContractAt(
      name: "FlexFreeInEscrowFundAdapterContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlexFreeInEscrowFundAdapterContract>;
    getContractAt(
      name: "FlexFundingAdapterContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlexFundingAdapterContract>;
    getContractAt(
      name: "FlexFundingHelperAdapterContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlexFundingHelperAdapterContract>;
    getContractAt(
      name: "FlexInvestmentPoolAdapterContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlexInvestmentPoolAdapterContract>;
    getContractAt(
      name: "FlexInvestmentPaybackTokenAdapterContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlexInvestmentPaybackTokenAdapterContract>;
    getContractAt(
      name: "FlexPollingVotingContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlexPollingVotingContract>;
    getContractAt(
      name: "FlexStewardAllocationAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlexStewardAllocationAdapter>;
    getContractAt(
      name: "FlexVesting",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlexVesting>;
    getContractAt(
      name: "FlexVestingERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlexVestingERC721>;
    getContractAt(
      name: "FlexVotingContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlexVotingContract>;
    getContractAt(
      name: "IFlexFunding",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlexFunding>;
    getContractAt(
      name: "IFlexVesting",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlexVesting>;
    getContractAt(
      name: "IFlexVoting",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlexVoting>;
    getContractAt(
      name: "StewardManagementContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StewardManagementContract>;
    getContractAt(
      name: "FlexInvestmentPoolExtension",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlexInvestmentPoolExtension>;
    getContractAt(
      name: "FlexFundingPoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlexFundingPoolFactory>;
    getContractAt(
      name: "FlexDaosetLibrary",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlexDaosetLibrary>;
    getContractAt(
      name: "Greeter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Greeter>;
    getContractAt(
      name: "MemberGuard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MemberGuard>;
    getContractAt(
      name: "GovernanceHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernanceHelper>;
    getContractAt(
      name: "WETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WETH>;
    getContractAt(
      name: "SummonDao",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SummonDao>;
    getContractAt(
      name: "SummonVintageDao",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SummonVintageDao>;
    getContractAt(
      name: "ERC1155TestToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155TestToken>;
    getContractAt(
      name: "ERC20MinterContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20MinterContract>;
    getContractAt(
      name: "MockDao",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockDao>;
    getContractAt(
      name: "OLToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OLToken>;
    getContractAt(
      name: "PixelNFT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PixelNFT>;
    getContractAt(
      name: "ProxTokenContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxTokenContract>;
    getContractAt(
      name: "TestFairShareCalc",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestFairShareCalc>;
    getContractAt(
      name: "TestMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestMath>;
    getContractAt(
      name: "TestRiceToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestRiceToken>;
    getContractAt(
      name: "TestToken1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestToken1>;
    getContractAt(
      name: "TestToken2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestToken2>;
    getContractAt(
      name: "DaoArtifacts",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DaoArtifacts>;
    getContractAt(
      name: "Multicall",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Multicall>;
    getContractAt(
      name: "Signatures",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Signatures>;
    getContractAt(
      name: "IVesting",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVesting>;
    getContractAt(
      name: "IVintageInvestment",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVintageInvestment>;
    getContractAt(
      name: "IVintageFundRaise",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVintageFundRaise>;
    getContractAt(
      name: "IVintageVoting",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVintageVoting>;
    getContractAt(
      name: "VintageAllocationAdapterContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VintageAllocationAdapterContract>;
    getContractAt(
      name: "VintageDaoSetAdapterContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VintageDaoSetAdapterContract>;
    getContractAt(
      name: "VintageDistributeAdatperContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VintageDistributeAdatperContract>;
    getContractAt(
      name: "VintageEscrowFundAdapterContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VintageEscrowFundAdapterContract>;
    getContractAt(
      name: "VintageFreeInEscrowFundAdapterContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VintageFreeInEscrowFundAdapterContract>;
    getContractAt(
      name: "VintageFundingAdapterContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VintageFundingAdapterContract>;
    getContractAt(
      name: "VintageFundingPoolAdapterContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VintageFundingPoolAdapterContract>;
    getContractAt(
      name: "VintageFundingPoolAdapterHelperContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VintageFundingPoolAdapterHelperContract>;
    getContractAt(
      name: "VintageInvestmentPaybackTokenAdapterContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VintageInvestmentPaybackTokenAdapterContract>;
    getContractAt(
      name: "VintageFundRaiseAdapterContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VintageFundRaiseAdapterContract>;
    getContractAt(
      name: "VintageRaiserAllocationAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VintageRaiserAllocationAdapter>;
    getContractAt(
      name: "VintageRaiserManagementContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VintageRaiserManagementContract>;
    getContractAt(
      name: "VintageVesting",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VintageVesting>;
    getContractAt(
      name: "VintageVestingERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VintageVestingERC721>;
    getContractAt(
      name: "VintageVotingContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VintageVotingContract>;
    getContractAt(
      name: "VintageFundingPoolExtension",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VintageFundingPoolExtension>;
    getContractAt(
      name: "VintageFundingPoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VintageFundingPoolFactory>;
    getContractAt(
      name: "InvestmentLibrary",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InvestmentLibrary>;
    getContractAt(
      name: "ERC20Detailed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Detailed>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ReentrancyGuard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuard>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
